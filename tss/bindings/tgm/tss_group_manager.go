// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tgm

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// ITssGroupManagerTssMember is an auto generated low-level Go binding around an user-defined struct.
type ITssGroupManagerTssMember struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}

// TssGroupManagerMetaData contains all meta data concerning the TssGroupManager contract.
var TssGroupManagerMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes\",\"name\":\"_groupKey\",\"type\":\"bytes\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"activeTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssActiveMemberAppended\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_roundId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"bytes[]\",\"name\":\"_inActiveTssMembers\",\"type\":\"bytes[]\"}],\"name\":\"tssGroupMemberAppend\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"getTssGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupMembers\",\"outputs\":[{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssGroupUnJailMembers\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTssInactiveGroupInfo\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"\",\"type\":\"bytes[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"getTssMember\",\"outputs\":[{\"components\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"structITssGroupManager.TssMember\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"inActiveIsEmpty\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"isInActiveMember\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isTssGroupUnJailMembers\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"memberExistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberExistInActive\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"memberUnJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"}],\"name\":\"publicKeyToAddress\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_ethSignedMessageHash\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"recover\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"}],\"name\":\"removeMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_publicKey\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_groupPublicKey\",\"type\":\"bytes\"}],\"name\":\"setGroupPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_address\",\"type\":\"address\"}],\"name\":\"setStakingSlash\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_threshold\",\"type\":\"uint256\"},{\"internalType\":\"bytes[]\",\"name\":\"_batchPublicKey\",\"type\":\"bytes[]\"}],\"name\":\"setTssGroupMember\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"stakingSlash\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"name\":\"tssActiveMemberInfo\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"publicKey\",\"type\":\"bytes\"},{\"internalType\":\"address\",\"name\":\"nodeAddress\",\"type\":\"address\"},{\"internalType\":\"enumITssGroupManager.MemberStatus\",\"name\":\"status\",\"type\":\"uint8\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"_message\",\"type\":\"bytes32\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"verifySign\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506200001c62000022565b620000e4565b600054610100900460ff16156200008f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000e2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b612e7d80620000f46000396000f3fe608060405234801561001057600080fd5b506004361061018e5760003560e01c80637a952c11116100de578063b57388d311610097578063e46a636811610071578063e46a636814610366578063f2fde38b14610394578063fcca5592146103a7578063fd3eb81f146103bf57600080fd5b8063b57388d31461032d578063bcbc5fc614610340578063cf4c8a7b1461035357600080fd5b80637a952c11146102c15780638129fc1c146102d45780638a51d8b4146102dc5780638da5cb5b146102e557806395f645bc146102f6578063b3bd9ac41461030b57600080fd5b8063429ec49c1161014b5780634866e2e0116101255780634866e2e01461027357806354bbb9141461028657806368fe7d23146102a6578063715018a6146102b957600080fd5b8063429ec49c1461023a57806343ae656c1461024d5780634679b3661461026057600080fd5b806319045a25146101935780631a47931b146101c3578063254ff981146101d85780632cd00d53146101eb5780633231a7f014610200578063404a698614610223575b600080fd5b6101a66101a136600461259c565b6103d2565b6040516001600160a01b0390911681526020015b60405180910390f35b6101d66101d13660046125e8565b6104e3565b005b6101d66101e6366004612667565b6109c0565b6101f3610a39565b6040516101ba91906126a9565b61021361020e36600461259c565b610c27565b60405190151581526020016101ba565b61022b610c53565b6040516101ba9392919061279b565b6101d6610248366004612667565b610d4a565b6101a661025b3660046127d9565b610d88565b6101d661026e36600461288a565b610de7565b610213610281366004612667565b6111cb565b610299610294366004612667565b6111fb565b6040516101ba919061292e565b6102136102b4366004612978565b611328565b6101d6611410565b6101d66102cf366004612667565b611424565b6101d6611587565b609f5415610213565b6033546001600160a01b03166101a6565b6102fe6116ac565b6040516101ba91906129a8565b61031e6103193660046127d9565b611785565b6040516101ba939291906129bb565b61021361033b366004612978565b61184a565b61021361034e366004612667565b6118c5565b609d546101a6906001600160a01b031681565b6102136103743660046127d9565b805160208183018101805160a48252928201919093012091525460ff1681565b6101d66103a2366004612978565b61190c565b6103af611982565b6040516101ba94939291906129f4565b6101d66103cd366004612978565b611aff565b60008060008061041786868080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611b8a92505050565b92509250925060006001888386866040516000815260200160405260405161045b949392919093845260ff9290921660208401526040830152606082015260800190565b6020604051602081039080840390855afa15801561047d573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166104d85760405162461bcd60e51b815260206004820152601060248201526f1958dc9958dbdd995c8819985a5b195960821b60448201526064015b60405180910390fd5b979650505050505050565b6104eb611c13565b806105385760405162461bcd60e51b815260206004820152601960248201527f6261746368207075626c6963206b657920697320656d7074790000000000000060448201526064016104cf565b8083106105935760405162461bcd60e51b815260206004820152602360248201527f7468726573686f6c64206d757374206c657373207468616e20747373206d656d6044820152623132b960e91b60648201526084016104cf565b60005b818110156106fb5760006106018484848181106105b5576105b5612a25565b90506020028101906105c79190612a3b565b8080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8892505050565b609d5460405163522c209d60e11b81526001600160a01b03808416600483015292935091169063a458413a90602401602060405180830381600087803b15801561064a57600080fd5b505af115801561065e573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906106829190612a82565b6106e85760405162461bcd60e51b815260206004820152603160248201527f6261746368207075626c6963206b657973206861732061206e6f6465202c636160448201527037103737ba1031329037b832b930ba37b960791b60648201526084016104cf565b50806106f381612aba565b915050610596565b50609f54156108575760005b609f5481101561084a5760a260a1609f838154811061072857610728612a25565b9060005260206000200160405161073f9190612b10565b90815260405190819003602001812061075791612b10565b90815260200160405180910390206000905560a1609f828154811061077e5761077e612a25565b906000526020600020016040516107959190612b10565b908152602001604051809103902060006107af9190612356565b60a3609f82815481106107c4576107c4612a25565b906000526020600020016040516107db9190612b10565b908152604051908190036020019020805460ff19169055609f805460a491908390811061080a5761080a612a25565b906000526020600020016040516108219190612b10565b908152604051908190036020019020805460ff191690558061084281612aba565b915050610707565b50610857609f6000612390565b60005b8181101561096557609f83838381811061087657610876612a25565b90506020028101906108889190612a3b565b8254600181018455600093845260209093206108a6930191906123ae565b50600160a48484848181106108bd576108bd612a25565b90506020028101906108cf9190612a3b565b6040516108dd929190612b82565b908152604051908190036020019020805491151560ff19909216919091179055600060a384848481811061091357610913612a25565b90506020028101906109259190612a3b565b604051610933929190612b82565b908152604051908190036020019020805491151560ff199092169190911790558061095d81612aba565b91505061085a565b50609b8390556000609c55609a547ffa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e906109a0906001612b92565b8484846040516109b39493929190612bd3565b60405180910390a1505050565b609d546001600160a01b031633146109ea5760405162461bcd60e51b81526004016104cf90612c81565b600160a083836040516109fe929190612b82565b908152602001604051809103902060010160146101000a81548160ff02191690836001811115610a3057610a306128f6565b02179055505050565b60606000805b609e54811015610acd57600060a0609e8381548110610a6057610a60612a25565b90600052602060002001604051610a779190612b10565b908152602001604051809103902060010160149054906101000a900460ff166001811115610aa757610aa76128f6565b1415610abb5781610ab781612aba565b9250505b80610ac581612aba565b915050610a3f565b5060008167ffffffffffffffff811115610ae957610ae96127c3565b604051908082528060200260200182016040528015610b12578160200160208202803683370190505b5090506000805b609e54811015610c1e57600060a0609e8381548110610b3a57610b3a612a25565b90600052602060002001604051610b519190612b10565b908152602001604051809103902060010160149054906101000a900460ff166001811115610b8157610b816128f6565b1415610c0c5760a0609e8281548110610b9c57610b9c612a25565b90600052602060002001604051610bb39190612b10565b9081526040519081900360200190206001015483516001600160a01b0390911690849084908110610be657610be6612a25565b6001600160a01b039092166020928302919091019091015281610c0881612aba565b9250505b80610c1681612aba565b915050610b19565b50909392505050565b6098546000906001600160a01b0316610c418585856103d2565b6001600160a01b031614949350505050565b6000806060609a546001610c679190612b92565b609b54609f80805480602002602001604051908101604052809291908181526020016000905b82821015610d39578382906000526020600020018054610cac90612ad5565b80601f0160208091040260200160405190810160405280929190818152602001828054610cd890612ad5565b8015610d255780601f10610cfa57610100808354040283529160200191610d25565b820191906000526020600020905b815481529060010190602001808311610d0857829003601f168201915b505050505081526020019060010190610c8d565b505050509050925092509250909192565b609d546001600160a01b03163314610d745760405162461bcd60e51b81526004016104cf90612c81565b600060a083836040516109fe929190612b82565b60008151604014610ddb5760405162461bcd60e51b815260206004820152601f60248201527f7075626c6963206b6579206c656e677468206d7573742036342062797465730060448201526064016104cf565b50805160209091012090565b60a48484604051610df9929190612b82565b9081526040519081900360200190205460ff16610e695760405162461bcd60e51b815260206004820152602860248201527f796f7572207075626c6963206b6579206973206e6f7420696e20496e416374696044820152673b32a6b2b6b132b960c11b60648201526084016104cf565b610ea884848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8892505050565b6001600160a01b0316336001600160a01b031614610eff5760405162461bcd60e51b81526020600482015260146024820152730e0eac4d8d2c640d6caf240dcdee840dac2e8c6d60631b60448201526064016104cf565b80610f4c5760405162461bcd60e51b815260206004820152601760248201527f67726f75705075626c69634b657920697320656d70747900000000000000000060448201526064016104cf565b60a38484604051610f5e929190612b82565b9081526040519081900360200190205460ff16610fbb57600160a38585604051610f89929190612b82565b908152604051908190036020019020805491151560ff19909216919091179055609c54610fb7906001612b92565b609c555b6110a360a18585604051610fd0929190612b82565b90815260200160405180910390208054610fe990612ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461101590612ad5565b80156110625780601f1061103757610100808354040283529160200191611062565b820191906000526020600020905b81548152906001019060200180831161104557829003601f168201915b505050505083838080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6d92505050565b61119157600160a283836040516110bb929190612b82565b908152602001604051809103902060008282546110d89190612b92565b909155505060405160a1906110f09086908690612b82565b9081526020016040518091039020805461110990612ad5565b15905061116157600160a260a18686604051611126929190612b82565b90815260405190819003602001812061113e91612b10565b9081526020016040518091039020600082825461115b9190612cc6565b90915550505b818160a18686604051611175929190612b82565b90815260405190819003602001902061118f9290916123ae565b505b609f5460405160a2906111a79085908590612b82565b908152602001604051809103902054106111c5576111c58282611cff565b50505050565b600060a483836040516111df929190612b82565b9081526040519081900360200190205460ff1690505b92915050565b61121c60408051606080820183528152600060208201819052909182015290565b60a0838360405161122e929190612b82565b908152602001604051809103902060405180606001604052908160008201805461125790612ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461128390612ad5565b80156112d05780601f106112a5576101008083540402835291602001916112d0565b820191906000526020600020905b8154815290600101906020018083116112b357829003601f168201915b50505091835250506001828101546001600160a01b0381166020840152604090920191600160a01b900460ff169081111561130d5761130d6128f6565b600181111561131e5761131e6128f6565b9052509392505050565b6000805b609e5481101561140757600060a0609e838154811061134d5761134d612a25565b906000526020600020016040516113649190612b10565b908152602001604051809103902060010160149054906101000a900460ff166001811115611394576113946128f6565b14156113f55760a0609e82815481106113af576113af612a25565b906000526020600020016040516113c69190612b10565b908152604051908190036020019020600101546001600160a01b03848116911614156113f55750600192915050565b806113ff81612aba565b91505061132c565b50600092915050565b611418611c13565b6114226000612219565b565b61142c611c13565b60005b609e548110156115435761151e609e828154811061144f5761144f612a25565b90600052602060002001805461146490612ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461149090612ad5565b80156114dd5780601f106114b2576101008083540402835291602001916114dd565b820191906000526020600020905b8154815290600101906020018083116114c057829003601f168201915b505050505084848080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250611c6d92505050565b156115315761152c8161226b565b611543565b8061153b81612aba565b91505061142f565b5060a08282604051611556929190612b82565b90815260405190819003602001902060006115718282612356565b5060010180546001600160a81b03191690555050565b600054610100900460ff16158080156115a75750600054600160ff909116105b806115c15750303b1580156115c1575060005460ff166001145b6116245760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b60648201526084016104cf565b6000805460ff191660011790558015611647576000805461ff0019166101001790555b61164f6122fc565b6000609a819055609c8190556099819055609b5580156116a9576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b50565b6060609e805480602002602001604051908101604052809291908181526020016000905b8282101561177c5783829060005260206000200180546116ef90612ad5565b80601f016020809104026020016040519081016040528092919081815260200182805461171b90612ad5565b80156117685780601f1061173d57610100808354040283529160200191611768565b820191906000526020600020905b81548152906001019060200180831161174b57829003601f168201915b5050505050815260200190600101906116d0565b50505050905090565b805160208183018101805160a0825292820191909301209152805481906117ab90612ad5565b80601f01602080910402602001604051908101604052809291908181526020018280546117d790612ad5565b80156118245780601f106117f957610100808354040283529160200191611824565b820191906000526020600020905b81548152906001019060200180831161180757829003601f168201915b505050600190930154919250506001600160a01b0381169060ff600160a01b9091041683565b6000805b609e548110156114075760a0609e828154811061186d5761186d612a25565b906000526020600020016040516118849190612b10565b908152604051908190036020019020600101546001600160a01b03848116911614156118b35750600192915050565b806118bd81612aba565b91505061184e565b60008060a084846040516118da929190612b82565b90815260405190819003602001902080546118f490612ad5565b90501115611904575060016111f5565b5060006111f5565b611914611c13565b6001600160a01b0381166119795760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016104cf565b6116a981612219565b600080606080609a546099546097609e81805461199e90612ad5565b80601f01602080910402602001604051908101604052809291908181526020018280546119ca90612ad5565b8015611a175780601f106119ec57610100808354040283529160200191611a17565b820191906000526020600020905b8154815290600101906020018083116119fa57829003601f168201915b5050505050915080805480602002602001604051908101604052809291908181526020016000905b82821015611aeb578382906000526020600020018054611a5e90612ad5565b80601f0160208091040260200160405190810160405280929190818152602001828054611a8a90612ad5565b8015611ad75780601f10611aac57610100808354040283529160200191611ad7565b820191906000526020600020905b815481529060010190602001808311611aba57829003601f168201915b505050505081526020019060010190611a3f565b505050509050935093509350935090919293565b611b07611c13565b6001600160a01b038116611b685760405162461bcd60e51b815260206004820152602260248201527f706172616d205f6164647265737320697320746865207a65726f206164647265604482015261737360f01b60648201526084016104cf565b609d80546001600160a01b0319166001600160a01b0392909216919091179055565b60008060008351604114611be05760405162461bcd60e51b815260206004820152601860248201527f696e76616c6964207369676e6174757265206c656e677468000000000000000060448201526064016104cf565b50505060208101516040820151606083015160001a601b811015611c0c57611c09601b82612cdd565b90505b9193909250565b6033546001600160a01b031633146114225760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016104cf565b60008151835114611c80575060006111f5565b60005b8351811015611cf557828181518110611c9e57611c9e612a25565b602001015160f81c60f81b6001600160f81b031916848281518110611cc557611cc5612a25565b01602001516001600160f81b03191614611ce35760009150506111f5565b80611ced81612aba565b915050611c83565b5060019392505050565b609e5415611d8c5760005b609e54811015611d7f5760a0609e8281548110611d2957611d29612a25565b90600052602060002001604051611d409190612b10565b9081526040519081900360200190206000611d5b8282612356565b5060010180546001600160a81b031916905580611d7781612aba565b915050611d0a565b50611d8c609e6000612390565b60005b609f5481101561214657609e609f8281548110611dae57611dae612a25565b600091825260208083208454600181018655948452922091018054919092019190611dd890612ad5565b611de3929190612432565b506040518060600160405280609f8381548110611e0257611e02612a25565b906000526020600020018054611e1790612ad5565b80601f0160208091040260200160405190810160405280929190818152602001828054611e4390612ad5565b8015611e905780601f10611e6557610100808354040283529160200191611e90565b820191906000526020600020905b815481529060010190602001808311611e7357829003601f168201915b50505050508152602001611f48609f8481548110611eb057611eb0612a25565b906000526020600020018054611ec590612ad5565b80601f0160208091040260200160405190810160405280929190818152602001828054611ef190612ad5565b8015611f3e5780601f10611f1357610100808354040283529160200191611f3e565b820191906000526020600020905b815481529060010190602001808311611f2157829003601f168201915b5050505050610d88565b6001600160a01b03168152602001600081525060a0609f8381548110611f7057611f70612a25565b90600052602060002001604051611f879190612b10565b90815260200160405180910390206000820151816000019080519060200190611fb19291906124ad565b506020820151600180830180546001600160a01b039093166001600160a01b031984168117825560408601519391926001600160a81b03199092161790600160a01b908490811115612005576120056128f6565b021790555090505060a260a1609f838154811061202457612024612a25565b9060005260206000200160405161203b9190612b10565b90815260405190819003602001812061205391612b10565b90815260200160405180910390206000905560a1609f828154811061207a5761207a612a25565b906000526020600020016040516120919190612b10565b908152602001604051809103902060006120ab9190612356565b60a3609f82815481106120c0576120c0612a25565b906000526020600020016040516120d79190612b10565b908152604051908190036020019020805460ff19169055609f805460a491908390811061210657612106612a25565b9060005260206000200160405161211d9190612b10565b908152604051908190036020019020805460ff191690558061213e81612aba565b915050611d8f565b50612153609f6000612390565b61215f609783836123ae565b5061219f82828080601f016020809104026020016040519081016040528093929190818152602001838380828437600092019190915250610d8892505050565b609880546001600160a01b0319166001600160a01b0392909216919091179055609b54609955609a546121d3906001612b92565b609a8190556040517f61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b669161220d9185908590609e90612d02565b60405180910390a15050565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b609e805461227b90600190612cc6565b8154811061228b5761228b612a25565b90600052602060002001609e82815481106122a8576122a8612a25565b906000526020600020019080546122be90612ad5565b6122c9929190612432565b50609e8054806122db576122db612de6565b6001900381819060005260206000200160006122f79190612356565b905550565b600054610100900460ff166123235760405162461bcd60e51b81526004016104cf90612dfc565b611422600054610100900460ff1661234d5760405162461bcd60e51b81526004016104cf90612dfc565b61142233612219565b50805461236290612ad5565b6000825580601f10612372575050565b601f0160209004906000526020600020908101906116a99190612521565b50805460008255906000526020600020908101906116a99190612536565b8280546123ba90612ad5565b90600052602060002090601f0160209004810192826123dc5760008555612422565b82601f106123f55782800160ff19823516178555612422565b82800160010185558215612422579182015b82811115612422578235825591602001919060010190612407565b5061242e929150612521565b5090565b82805461243e90612ad5565b90600052602060002090601f0160209004810192826124605760008555612422565b82601f106124715780548555612422565b8280016001018555821561242257600052602060002091601f016020900482015b82811115612422578254825591600101919060010190612492565b8280546124b990612ad5565b90600052602060002090601f0160209004810192826124db5760008555612422565b82601f106124f457805160ff1916838001178555612422565b82800160010185558215612422579182015b82811115612422578251825591602001919060010190612506565b5b8082111561242e5760008155600101612522565b8082111561242e57600061254a8282612356565b50600101612536565b60008083601f84011261256557600080fd5b50813567ffffffffffffffff81111561257d57600080fd5b60208301915083602082850101111561259557600080fd5b9250929050565b6000806000604084860312156125b157600080fd5b83359250602084013567ffffffffffffffff8111156125cf57600080fd5b6125db86828701612553565b9497909650939450505050565b6000806000604084860312156125fd57600080fd5b83359250602084013567ffffffffffffffff8082111561261c57600080fd5b818601915086601f83011261263057600080fd5b81358181111561263f57600080fd5b8760208260051b850101111561265457600080fd5b6020830194508093505050509250925092565b6000806020838503121561267a57600080fd5b823567ffffffffffffffff81111561269157600080fd5b61269d85828601612553565b90969095509350505050565b6020808252825182820181905260009190848201906040850190845b818110156126ea5783516001600160a01b0316835292840192918401916001016126c5565b50909695505050505050565b6000815180845260005b8181101561271c57602081850181015186830182015201612700565b8181111561272e576000602083870101525b50601f01601f19169290920160200192915050565b600082825180855260208086019550808260051b84010181860160005b8481101561278e57601f1986840301895261277c8383516126f6565b98840198925090830190600101612760565b5090979650505050505050565b8381528260208201526060604082015260006127ba6060830184612743565b95945050505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156127eb57600080fd5b813567ffffffffffffffff8082111561280357600080fd5b818401915084601f83011261281757600080fd5b813581811115612829576128296127c3565b604051601f8201601f19908116603f01168101908382118183101715612851576128516127c3565b8160405282815287602084870101111561286a57600080fd5b826020860160208301376000928101602001929092525095945050505050565b600080600080604085870312156128a057600080fd5b843567ffffffffffffffff808211156128b857600080fd5b6128c488838901612553565b909650945060208701359150808211156128dd57600080fd5b506128ea87828801612553565b95989497509550505050565b634e487b7160e01b600052602160045260246000fd5b6002811061292a57634e487b7160e01b600052602160045260246000fd5b9052565b60208152600082516060602084015261294a60808401826126f6565b905060018060a01b0360208501511660408401526040840151612970606085018261290c565b509392505050565b60006020828403121561298a57600080fd5b81356001600160a01b03811681146129a157600080fd5b9392505050565b6020815260006129a16020830184612743565b6060815260006129ce60608301866126f6565b6001600160a01b038516602084015290506129ec604083018461290c565b949350505050565b848152836020820152608060408201526000612a1360808301856126f6565b82810360608401526104d88185612743565b634e487b7160e01b600052603260045260246000fd5b6000808335601e19843603018112612a5257600080fd5b83018035915067ffffffffffffffff821115612a6d57600080fd5b60200191503681900382131561259557600080fd5b600060208284031215612a9457600080fd5b815180151581146129a157600080fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415612ace57612ace612aa4565b5060010190565b600181811c90821680612ae957607f821691505b60208210811415612b0a57634e487b7160e01b600052602260045260246000fd5b50919050565b6000808354612b1e81612ad5565b60018281168015612b365760018114612b4757612b76565b60ff19841687528287019450612b76565b8760005260208060002060005b85811015612b6d5781548a820152908401908201612b54565b50505082870194505b50929695505050505050565b8183823760009101908152919050565b60008219821115612ba557612ba5612aa4565b500190565b81835281816020850137506000828201602090810191909152601f909101601f19169091010190565b60006060820186835260208681850152606060408501528185835260808501905060808660051b86010192508660005b87811015612c7257868503607f190183528135368a9003601e19018112612c2957600080fd5b8901803567ffffffffffffffff811115612c4257600080fd5b8036038b1315612c5157600080fd5b612c5e8782888501612baa565b965050509183019190830190600101612c03565b50929998505050505050505050565b60208082526025908201527f636f6e74726163742063616c6c206973206e6f74207374616b696e6720736c616040820152647368696e6760d81b606082015260800190565b600082821015612cd857612cd8612aa4565b500390565b600060ff821660ff84168060ff03821115612cfa57612cfa612aa4565b019392505050565b84815260006020606081840152612d1d606084018688612baa565b83810360408501528085548083528383019150838160051b8401016000888152858120815b84811015612dd457601f19878503018652828254612d5f81612ad5565b80875260018281168015612d7a5760018114612d8e57612dbd565b60ff198416898e0152604089019450612dbd565b8688528c8820885b84811015612db55781548f828d01015283820191508e81019050612d96565b8a018e019550505b50988b019892965050509190910190600101612d42565b50919c9b505050505050505050505050565b634e487b7160e01b600052603160045260246000fd5b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b60608201526080019056fea26469706673582212203f8eb05fd702e3ee33daf145346e1d9e51c30b9c09d1ca68bd682ad4e9873aaa64736f6c63430008090033",
}

// TssGroupManagerABI is the input ABI used to generate the binding from.
// Deprecated: Use TssGroupManagerMetaData.ABI instead.
var TssGroupManagerABI = TssGroupManagerMetaData.ABI

// TssGroupManagerBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TssGroupManagerMetaData.Bin instead.
var TssGroupManagerBin = TssGroupManagerMetaData.Bin

// DeployTssGroupManager deploys a new Ethereum contract, binding an instance of TssGroupManager to it.
func DeployTssGroupManager(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TssGroupManager, error) {
	parsed, err := TssGroupManagerMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TssGroupManagerBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// TssGroupManager is an auto generated Go binding around an Ethereum contract.
type TssGroupManager struct {
	TssGroupManagerCaller     // Read-only binding to the contract
	TssGroupManagerTransactor // Write-only binding to the contract
	TssGroupManagerFilterer   // Log filterer for contract events
}

// TssGroupManagerCaller is an auto generated read-only Go binding around an Ethereum contract.
type TssGroupManagerCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TssGroupManagerFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssGroupManagerSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TssGroupManagerSession struct {
	Contract     *TssGroupManager  // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// TssGroupManagerCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TssGroupManagerCallerSession struct {
	Contract *TssGroupManagerCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts          // Call options to use throughout this session
}

// TssGroupManagerTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TssGroupManagerTransactorSession struct {
	Contract     *TssGroupManagerTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts          // Transaction auth options to use throughout this session
}

// TssGroupManagerRaw is an auto generated low-level Go binding around an Ethereum contract.
type TssGroupManagerRaw struct {
	Contract *TssGroupManager // Generic contract binding to access the raw methods on
}

// TssGroupManagerCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TssGroupManagerCallerRaw struct {
	Contract *TssGroupManagerCaller // Generic read-only contract binding to access the raw methods on
}

// TssGroupManagerTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TssGroupManagerTransactorRaw struct {
	Contract *TssGroupManagerTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTssGroupManager creates a new instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManager(address common.Address, backend bind.ContractBackend) (*TssGroupManager, error) {
	contract, err := bindTssGroupManager(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TssGroupManager{TssGroupManagerCaller: TssGroupManagerCaller{contract: contract}, TssGroupManagerTransactor: TssGroupManagerTransactor{contract: contract}, TssGroupManagerFilterer: TssGroupManagerFilterer{contract: contract}}, nil
}

// NewTssGroupManagerCaller creates a new read-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerCaller(address common.Address, caller bind.ContractCaller) (*TssGroupManagerCaller, error) {
	contract, err := bindTssGroupManager(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerCaller{contract: contract}, nil
}

// NewTssGroupManagerTransactor creates a new write-only instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerTransactor(address common.Address, transactor bind.ContractTransactor) (*TssGroupManagerTransactor, error) {
	contract, err := bindTssGroupManager(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTransactor{contract: contract}, nil
}

// NewTssGroupManagerFilterer creates a new log filterer instance of TssGroupManager, bound to a specific deployed contract.
func NewTssGroupManagerFilterer(address common.Address, filterer bind.ContractFilterer) (*TssGroupManagerFilterer, error) {
	contract, err := bindTssGroupManager(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerFilterer{contract: contract}, nil
}

// bindTssGroupManager binds a generic wrapper to an already deployed contract.
func bindTssGroupManager(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TssGroupManagerABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.TssGroupManagerCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TssGroupManagerTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssGroupManager *TssGroupManagerCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssGroupManager.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssGroupManager *TssGroupManagerTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssGroupManager.Contract.contract.Transact(opts, method, params...)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, []byte, [][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupInfo")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new([]byte), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new([]byte)).(*[]byte)
	out3 := *abi.ConvertType(out[3], new([][]byte)).(*[][]byte)

	return out0, out1, out2, out3, err

}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupInfo is a free data retrieval call binding the contract method 0xfcca5592.
//
// Solidity: function getTssGroupInfo() view returns(uint256, uint256, bytes, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupInfo() (*big.Int, *big.Int, []byte, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupMembers(opts *bind.CallOpts) ([][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupMembers")

	if err != nil {
		return *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([][]byte)).(*[][]byte)

	return out0, err

}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupMembers is a free data retrieval call binding the contract method 0x95f645bc.
//
// Solidity: function getTssGroupMembers() view returns(bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupMembers() ([][]byte, error) {
	return _TssGroupManager.Contract.GetTssGroupMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() view returns(address[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssGroupUnJailMembers(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssGroupUnJailMembers")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() view returns(address[])
func (_TssGroupManager *TssGroupManagerSession) GetTssGroupUnJailMembers() ([]common.Address, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.CallOpts)
}

// GetTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x2cd00d53.
//
// Solidity: function getTssGroupUnJailMembers() view returns(address[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssGroupUnJailMembers() ([]common.Address, error) {
	return _TssGroupManager.Contract.GetTssGroupUnJailMembers(&_TssGroupManager.CallOpts)
}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerCaller) GetTssInactiveGroupInfo(opts *bind.CallOpts) (*big.Int, *big.Int, [][]byte, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssInactiveGroupInfo")

	if err != nil {
		return *new(*big.Int), *new(*big.Int), *new([][]byte), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)
	out1 := *abi.ConvertType(out[1], new(*big.Int)).(**big.Int)
	out2 := *abi.ConvertType(out[2], new([][]byte)).(*[][]byte)

	return out0, out1, out2, err

}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerSession) GetTssInactiveGroupInfo() (*big.Int, *big.Int, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssInactiveGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssInactiveGroupInfo is a free data retrieval call binding the contract method 0x404a6986.
//
// Solidity: function getTssInactiveGroupInfo() view returns(uint256, uint256, bytes[])
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssInactiveGroupInfo() (*big.Int, *big.Int, [][]byte, error) {
	return _TssGroupManager.Contract.GetTssInactiveGroupInfo(&_TssGroupManager.CallOpts)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerCaller) GetTssMember(opts *bind.CallOpts, _publicKey []byte) (ITssGroupManagerTssMember, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "getTssMember", _publicKey)

	if err != nil {
		return *new(ITssGroupManagerTssMember), err
	}

	out0 := *abi.ConvertType(out[0], new(ITssGroupManagerTssMember)).(*ITssGroupManagerTssMember)

	return out0, err

}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// GetTssMember is a free data retrieval call binding the contract method 0x54bbb914.
//
// Solidity: function getTssMember(bytes _publicKey) view returns((bytes,address,uint8))
func (_TssGroupManager *TssGroupManagerCallerSession) GetTssMember(_publicKey []byte) (ITssGroupManagerTssMember, error) {
	return _TssGroupManager.Contract.GetTssMember(&_TssGroupManager.CallOpts, _publicKey)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) InActiveIsEmpty(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "inActiveIsEmpty")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// InActiveIsEmpty is a free data retrieval call binding the contract method 0x8a51d8b4.
//
// Solidity: function inActiveIsEmpty() view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) InActiveIsEmpty() (bool, error) {
	return _TssGroupManager.Contract.InActiveIsEmpty(&_TssGroupManager.CallOpts)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsInActiveMember(opts *bind.CallOpts, arg0 []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isInActiveMember", arg0)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsInActiveMember is a free data retrieval call binding the contract method 0xe46a6368.
//
// Solidity: function isInActiveMember(bytes ) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsInActiveMember(arg0 []byte) (bool, error) {
	return _TssGroupManager.Contract.IsInActiveMember(&_TssGroupManager.CallOpts, arg0)
}

// IsTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x68fe7d23.
//
// Solidity: function isTssGroupUnJailMembers(address _addr) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) IsTssGroupUnJailMembers(opts *bind.CallOpts, _addr common.Address) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "isTssGroupUnJailMembers", _addr)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x68fe7d23.
//
// Solidity: function isTssGroupUnJailMembers(address _addr) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) IsTssGroupUnJailMembers(_addr common.Address) (bool, error) {
	return _TssGroupManager.Contract.IsTssGroupUnJailMembers(&_TssGroupManager.CallOpts, _addr)
}

// IsTssGroupUnJailMembers is a free data retrieval call binding the contract method 0x68fe7d23.
//
// Solidity: function isTssGroupUnJailMembers(address _addr) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) IsTssGroupUnJailMembers(_addr common.Address) (bool, error) {
	return _TssGroupManager.Contract.IsTssGroupUnJailMembers(&_TssGroupManager.CallOpts, _addr)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xb57388d3.
//
// Solidity: function memberExistActive(address _addr) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistActive(opts *bind.CallOpts, _addr common.Address) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistActive", _addr)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistActive is a free data retrieval call binding the contract method 0xb57388d3.
//
// Solidity: function memberExistActive(address _addr) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistActive(_addr common.Address) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _addr)
}

// MemberExistActive is a free data retrieval call binding the contract method 0xb57388d3.
//
// Solidity: function memberExistActive(address _addr) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistActive(_addr common.Address) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive(&_TssGroupManager.CallOpts, _addr)
}

// MemberExistActive0 is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistActive0(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistActive0", _publicKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistActive0 is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistActive0(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive0(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistActive0 is a free data retrieval call binding the contract method 0xbcbc5fc6.
//
// Solidity: function memberExistActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistActive0(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistActive0(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) MemberExistInActive(opts *bind.CallOpts, _publicKey []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "memberExistInActive", _publicKey)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// MemberExistInActive is a free data retrieval call binding the contract method 0x4866e2e0.
//
// Solidity: function memberExistInActive(bytes _publicKey) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) MemberExistInActive(_publicKey []byte) (bool, error) {
	return _TssGroupManager.Contract.MemberExistInActive(&_TssGroupManager.CallOpts, _publicKey)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Owner() (common.Address, error) {
	return _TssGroupManager.Contract.Owner(&_TssGroupManager.CallOpts)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerCaller) PublicKeyToAddress(opts *bind.CallOpts, publicKey []byte) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "publicKeyToAddress", publicKey)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// PublicKeyToAddress is a free data retrieval call binding the contract method 0x43ae656c.
//
// Solidity: function publicKeyToAddress(bytes publicKey) pure returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) PublicKeyToAddress(publicKey []byte) (common.Address, error) {
	return _TssGroupManager.Contract.PublicKeyToAddress(&_TssGroupManager.CallOpts, publicKey)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerCaller) Recover(opts *bind.CallOpts, _ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "recover", _ethSignedMessageHash, _sig)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// Recover is a free data retrieval call binding the contract method 0x19045a25.
//
// Solidity: function recover(bytes32 _ethSignedMessageHash, bytes _sig) pure returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) Recover(_ethSignedMessageHash [32]byte, _sig []byte) (common.Address, error) {
	return _TssGroupManager.Contract.Recover(&_TssGroupManager.CallOpts, _ethSignedMessageHash, _sig)
}

// StakingSlash is a free data retrieval call binding the contract method 0xcf4c8a7b.
//
// Solidity: function stakingSlash() view returns(address)
func (_TssGroupManager *TssGroupManagerCaller) StakingSlash(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "stakingSlash")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// StakingSlash is a free data retrieval call binding the contract method 0xcf4c8a7b.
//
// Solidity: function stakingSlash() view returns(address)
func (_TssGroupManager *TssGroupManagerSession) StakingSlash() (common.Address, error) {
	return _TssGroupManager.Contract.StakingSlash(&_TssGroupManager.CallOpts)
}

// StakingSlash is a free data retrieval call binding the contract method 0xcf4c8a7b.
//
// Solidity: function stakingSlash() view returns(address)
func (_TssGroupManager *TssGroupManagerCallerSession) StakingSlash() (common.Address, error) {
	return _TssGroupManager.Contract.StakingSlash(&_TssGroupManager.CallOpts)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCaller) TssActiveMemberInfo(opts *bind.CallOpts, arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "tssActiveMemberInfo", arg0)

	outstruct := new(struct {
		PublicKey   []byte
		NodeAddress common.Address
		Status      uint8
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.PublicKey = *abi.ConvertType(out[0], new([]byte)).(*[]byte)
	outstruct.NodeAddress = *abi.ConvertType(out[1], new(common.Address)).(*common.Address)
	outstruct.Status = *abi.ConvertType(out[2], new(uint8)).(*uint8)

	return *outstruct, err

}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// TssActiveMemberInfo is a free data retrieval call binding the contract method 0xb3bd9ac4.
//
// Solidity: function tssActiveMemberInfo(bytes ) view returns(bytes publicKey, address nodeAddress, uint8 status)
func (_TssGroupManager *TssGroupManagerCallerSession) TssActiveMemberInfo(arg0 []byte) (struct {
	PublicKey   []byte
	NodeAddress common.Address
	Status      uint8
}, error) {
	return _TssGroupManager.Contract.TssActiveMemberInfo(&_TssGroupManager.CallOpts, arg0)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerCaller) VerifySign(opts *bind.CallOpts, _message [32]byte, _sig []byte) (bool, error) {
	var out []interface{}
	err := _TssGroupManager.contract.Call(opts, &out, "verifySign", _message, _sig)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// VerifySign is a free data retrieval call binding the contract method 0x3231a7f0.
//
// Solidity: function verifySign(bytes32 _message, bytes _sig) view returns(bool)
func (_TssGroupManager *TssGroupManagerCallerSession) VerifySign(_message [32]byte, _sig []byte) (bool, error) {
	return _TssGroupManager.Contract.VerifySign(&_TssGroupManager.CallOpts, _message, _sig)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactor) Initialize(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "initialize")
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// Initialize is a paid mutator transaction binding the contract method 0x8129fc1c.
//
// Solidity: function initialize() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) Initialize() (*types.Transaction, error) {
	return _TssGroupManager.Contract.Initialize(&_TssGroupManager.TransactOpts)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberJail", _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberJail is a paid mutator transaction binding the contract method 0x254ff981.
//
// Solidity: function memberJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) MemberUnJail(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "memberUnJail", _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// MemberUnJail is a paid mutator transaction binding the contract method 0x429ec49c.
//
// Solidity: function memberUnJail(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) MemberUnJail(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.MemberUnJail(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) RemoveMember(opts *bind.TransactOpts, _publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "removeMember", _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RemoveMember is a paid mutator transaction binding the contract method 0x7a952c11.
//
// Solidity: function removeMember(bytes _publicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RemoveMember(_publicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.RemoveMember(&_TssGroupManager.TransactOpts, _publicKey)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssGroupManager.Contract.RenounceOwnership(&_TssGroupManager.TransactOpts)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetGroupPublicKey(opts *bind.TransactOpts, _publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setGroupPublicKey", _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetGroupPublicKey is a paid mutator transaction binding the contract method 0x4679b366.
//
// Solidity: function setGroupPublicKey(bytes _publicKey, bytes _groupPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetGroupPublicKey(_publicKey []byte, _groupPublicKey []byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetGroupPublicKey(&_TssGroupManager.TransactOpts, _publicKey, _groupPublicKey)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetStakingSlash(opts *bind.TransactOpts, _address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setStakingSlash", _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetStakingSlash is a paid mutator transaction binding the contract method 0xfd3eb81f.
//
// Solidity: function setStakingSlash(address _address) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetStakingSlash(_address common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetStakingSlash(&_TssGroupManager.TransactOpts, _address)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactor) SetTssGroupMember(opts *bind.TransactOpts, _threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "setTssGroupMember", _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// SetTssGroupMember is a paid mutator transaction binding the contract method 0x1a47931b.
//
// Solidity: function setTssGroupMember(uint256 _threshold, bytes[] _batchPublicKey) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) SetTssGroupMember(_threshold *big.Int, _batchPublicKey [][]byte) (*types.Transaction, error) {
	return _TssGroupManager.Contract.SetTssGroupMember(&_TssGroupManager.TransactOpts, _threshold, _batchPublicKey)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssGroupManager *TssGroupManagerTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssGroupManager.Contract.TransferOwnership(&_TssGroupManager.TransactOpts, newOwner)
}

// TssGroupManagerInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the TssGroupManager contract.
type TssGroupManagerInitializedIterator struct {
	Event *TssGroupManagerInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerInitialized represents a Initialized event raised by the TssGroupManager contract.
type TssGroupManagerInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) FilterInitialized(opts *bind.FilterOpts) (*TssGroupManagerInitializedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerInitializedIterator{contract: _TssGroupManager.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *TssGroupManagerInitialized) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerInitialized)
				if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssGroupManager *TssGroupManagerFilterer) ParseInitialized(log types.Log) (*TssGroupManagerInitialized, error) {
	event := new(TssGroupManagerInitialized)
	if err := _TssGroupManager.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferredIterator struct {
	Event *TssGroupManagerOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerOwnershipTransferred represents a OwnershipTransferred event raised by the TssGroupManager contract.
type TssGroupManagerOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*TssGroupManagerOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerOwnershipTransferredIterator{contract: _TssGroupManager.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *TssGroupManagerOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerOwnershipTransferred)
				if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssGroupManager *TssGroupManagerFilterer) ParseOwnershipTransferred(log types.Log) (*TssGroupManagerOwnershipTransferred, error) {
	event := new(TssGroupManagerOwnershipTransferred)
	if err := _TssGroupManager.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerTssActiveMemberAppendedIterator is returned from FilterTssActiveMemberAppended and is used to iterate over the raw logs and unpacked data for TssActiveMemberAppended events raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppendedIterator struct {
	Event *TssGroupManagerTssActiveMemberAppended // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssActiveMemberAppended)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssActiveMemberAppended)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssActiveMemberAppendedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssActiveMemberAppended represents a TssActiveMemberAppended event raised by the TssGroupManager contract.
type TssGroupManagerTssActiveMemberAppended struct {
	RoundId          *big.Int
	GroupKey         []byte
	ActiveTssMembers [][]byte
	Raw              types.Log // Blockchain specific contextual infos
}

// FilterTssActiveMemberAppended is a free log retrieval operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssActiveMemberAppended(opts *bind.FilterOpts) (*TssGroupManagerTssActiveMemberAppendedIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssActiveMemberAppendedIterator{contract: _TssGroupManager.contract, event: "tssActiveMemberAppended", logs: logs, sub: sub}, nil
}

// WatchTssActiveMemberAppended is a free log subscription operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssActiveMemberAppended(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssActiveMemberAppended) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssActiveMemberAppended")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssActiveMemberAppended)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssActiveMemberAppended is a log parse operation binding the contract event 0x61c7922e50ad7ea3d35879a4a819ae97eb09b665f2113451d7ada7cb2b689b66.
//
// Solidity: event tssActiveMemberAppended(uint256 _roundId, bytes _groupKey, bytes[] activeTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssActiveMemberAppended(log types.Log) (*TssGroupManagerTssActiveMemberAppended, error) {
	event := new(TssGroupManagerTssActiveMemberAppended)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssActiveMemberAppended", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssGroupManagerTssGroupMemberAppendIterator is returned from FilterTssGroupMemberAppend and is used to iterate over the raw logs and unpacked data for TssGroupMemberAppend events raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppendIterator struct {
	Event *TssGroupManagerTssGroupMemberAppend // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssGroupManagerTssGroupMemberAppend)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssGroupManagerTssGroupMemberAppend)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssGroupManagerTssGroupMemberAppendIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssGroupManagerTssGroupMemberAppend represents a TssGroupMemberAppend event raised by the TssGroupManager contract.
type TssGroupManagerTssGroupMemberAppend struct {
	RoundId            *big.Int
	Threshold          *big.Int
	InActiveTssMembers [][]byte
	Raw                types.Log // Blockchain specific contextual infos
}

// FilterTssGroupMemberAppend is a free log retrieval operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) FilterTssGroupMemberAppend(opts *bind.FilterOpts) (*TssGroupManagerTssGroupMemberAppendIterator, error) {

	logs, sub, err := _TssGroupManager.contract.FilterLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return &TssGroupManagerTssGroupMemberAppendIterator{contract: _TssGroupManager.contract, event: "tssGroupMemberAppend", logs: logs, sub: sub}, nil
}

// WatchTssGroupMemberAppend is a free log subscription operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) WatchTssGroupMemberAppend(opts *bind.WatchOpts, sink chan<- *TssGroupManagerTssGroupMemberAppend) (event.Subscription, error) {

	logs, sub, err := _TssGroupManager.contract.WatchLogs(opts, "tssGroupMemberAppend")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssGroupManagerTssGroupMemberAppend)
				if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTssGroupMemberAppend is a log parse operation binding the contract event 0xfa26843b7ced045dd12994ee0e73c6f0904c3a4608bce58ae304d606035b079e.
//
// Solidity: event tssGroupMemberAppend(uint256 _roundId, uint256 _threshold, bytes[] _inActiveTssMembers)
func (_TssGroupManager *TssGroupManagerFilterer) ParseTssGroupMemberAppend(log types.Log) (*TssGroupManagerTssGroupMemberAppend, error) {
	event := new(TssGroupManagerTssGroupMemberAppend)
	if err := _TssGroupManager.contract.UnpackLog(event, "tssGroupMemberAppend", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
