// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package tsh

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
)

// IDelegationManagerWithdrawerAndNonce is an auto generated low-level Go binding around an user-defined struct.
type IDelegationManagerWithdrawerAndNonce struct {
	Withdrawer common.Address
	Nonce      *big.Int
}

// TssStakingSlashingMetaData contains all meta data concerning the TssStakingSlashing contract.
var TssStakingSlashingMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"enumTssStakingSlashing.SlashType\",\"name\":\"\",\"type\":\"uint8\"}],\"name\":\"Slashing\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"Withdraw\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"WithdrawQueue\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"canCompleteQueuedWithdrawal\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"claimerOperators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"clearQuitRequestList\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"completeWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"}],\"name\":\"delegateTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contractIDelegation\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegationManager\",\"outputs\":[{\"internalType\":\"contractIDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"delegators\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"newShares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getQuitRequestList\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"batchIndex\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getSlashRecord\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getSlashingParams\",\"outputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"\",\"type\":\"uint256[2]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_mantleToken\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tssGroupContract\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegationManager\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_l1messenger\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_regulatoryAccount\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_addr\",\"type\":\"address\"}],\"name\":\"isCanOperator\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"isJailed\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"isSetParam\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"messenger\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"contractIDelegationShare[]\",\"name\":\"investorDelegationShares\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"investorShares\",\"type\":\"uint256[]\"}],\"name\":\"onDelegationReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contractIDelegationShare[]\",\"name\":\"delegationShares\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"investorShares\",\"type\":\"uint256[]\"}],\"name\":\"onDelegationReceived\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"contractIDelegationShare[]\",\"name\":\"delegationShares\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"investorShares\",\"type\":\"uint256[]\"}],\"name\":\"onDelegationWithdrawn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"delegator\",\"type\":\"address\"},{\"internalType\":\"contractIDelegationShare[]\",\"name\":\"investorDelegationShares\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"investorShares\",\"type\":\"uint256[]\"}],\"name\":\"onDelegationWithdrawn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operatorClaimers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"operators\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"payForService\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"quitRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"quitRequestList\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_pubKey\",\"type\":\"bytes\"}],\"name\":\"registerAsOperator\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"regulatoryAccount\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_operator\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_claimer\",\"type\":\"address\"}],\"name\":\"setClaimer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_pubKey\",\"type\":\"bytes\"}],\"name\":\"setPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_account\",\"type\":\"address\"}],\"name\":\"setRegulatoryAccount\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[2]\",\"name\":\"_slashAmount\",\"type\":\"uint256[2]\"}],\"name\":\"setSlashingParams\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"}],\"name\":\"setTokenAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tssGroup\",\"type\":\"address\"}],\"name\":\"setTssGroupAddress\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"shares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"slashAmount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_messageBytes\",\"type\":\"bytes\"},{\"internalType\":\"bytes\",\"name\":\"_sig\",\"type\":\"bytes\"}],\"name\":\"slashing\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakers\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"startWithdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tssDelegationContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tssDelegationManagerContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"tssGroupContract\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"unJail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contractIERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"contractIERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawalRoots\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"withdrawals\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"structIDelegationManager.WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b5060cd80546001600160a01b03191690556200002c62000032565b620000f4565b600054610100900460ff16156200009f5760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff9081161015620000f2576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b61521780620001046000396000f3fe6080604052600436106103a25760003560e01c80638f6a6240116101e7578063cc2a9a5b1161010d578063ea4d3c9b116100a0578063f47c83c51161006f578063f47c83c51461052f578063f5cf673b14610b7b578063f756fa2114610b9b578063fee17dd514610bb057600080fd5b8063ea4d3c9b14610afb578063f2bd740014610b1b578063f2fde38b14610b3b578063f3e7387514610b5b57600080fd5b8063d9caed12116100dc578063d9caed1214610a65578063df5cf72314610a85578063e3dae51c14610aa5578063ea0c8c2f14610ac557600080fd5b8063cc2a9a5b146109cf578063ce7c2ac2146109ef578063d323041d14610a0f578063d58ecaaa14610a2f57600080fd5b8063ac637c7a11610185578063bbb26c6311610154578063bbb26c6314610950578063c3a82e1114610962578063c665c35a1461098f578063c8b6cbf7146109af57600080fd5b8063ac637c7a146108ce578063b1bbdc41146108ee578063b3fc1cb21461090e578063b6b55f251461093057600080fd5b8063965a303f116101c1578063965a303f14610859578063a458413a14610879578063a91d58b414610899578063ab5921e1146108b957600080fd5b80638f6a62401461080457806390ed6bf41461082457806395cf5bea1461083957600080fd5b806357b0f05f116102cc578063740efec31161026a5780638340f549116102395780638340f549146107705780638c871019146107905780638d23fc61146107b05780638da5cb5b146107e657600080fd5b8063740efec3146106735780637a8b2637146106885780637a9262a2146106a8578063829673ef1461072a57600080fd5b806360ac5166116102a657806360ac5166146106095780636dd300b5146106295780636eae5b1114610649578063715018a61461065e57600080fd5b806357b0f05f146105b15780635887c33c146105d15780635c975abb146105f157600080fd5b80633a98ef3911610344578063412cdd2c11610313578063412cdd2c1461052f578063490ab9d61461054f578063553ca5f8146105715780635716d17c1461059157600080fd5b80633a98ef39146104b65780633c86a42f146104da5780633cb747bf146104fa5780633ccfd60b1461051a57600080fd5b80632495a599116103805780632495a5991461042457806326a4e8d21461045c578063289087ba1461047c57806329f134311461049657600080fd5b8063111b8c02146103a757806313e7c9d8146103be57806314bfb527146103f4575b600080fd5b3480156103b357600080fd5b506103bc610bc5565b005b3480156103ca57600080fd5b506103de6103d9366004614305565b610bdb565b6040516103eb919061437e565b60405180910390f35b34801561040057600080fd5b5061041461040f366004614305565b610c75565b60405190151581526020016103eb565b34801561043057600080fd5b5060ca54610444906001600160a01b031681565b6040516001600160a01b0390911681526020016103eb565b34801561046857600080fd5b506103bc610477366004614305565b610d7d565b34801561048857600080fd5b5060dd546104149060ff1681565b3480156104a257600080fd5b506103bc6104b1366004614391565b610dcd565b3480156104c257600080fd5b506104cc60cb5481565b6040519081526020016103eb565b3480156104e657600080fd5b506103bc6104f5366004614305565b610eef565b34801561050657600080fd5b5060cd54610444906001600160a01b031681565b34801561052657600080fd5b506103bc610f3f565b34801561053b57600080fd5b506103bc61054a366004614539565b505050565b34801561055b57600080fd5b506105646114d5565b6040516103eb91906145af565b34801561057d57600080fd5b506104cc61058c366004614305565b611537565b34801561059d57600080fd5b5060cf54610444906001600160a01b031681565b3480156105bd57600080fd5b506104446105cc3660046145fc565b61154b565b3480156105dd57600080fd5b506103bc6105ec36600461465e565b611575565b3480156105fd57600080fd5b5060975460ff16610414565b34801561061557600080fd5b506103bc610624366004614305565b6117df565b34801561063557600080fd5b506103bc6106443660046146ca565b61182f565b34801561065557600080fd5b506103bc6119e4565b34801561066a57600080fd5b506103bc611b92565b34801561067f57600080fd5b506103bc611ba4565b34801561069457600080fd5b506104cc6106a33660046145fc565b611efe565b3480156106b457600080fd5b5061071b6106c3366004614305565b60d8602090815260009182526040918290206003810154835180850190945260048201546001600160a01b038082168652600160a01b9091046001600160601b03169385019390935260059091015490821692911683565b6040516103eb93929190614774565b34801561073657600080fd5b506104146107453660046147a4565b600091825260d5602090815260408084206001600160a01b0393909316845291905290205460ff1690565b34801561077c57600080fd5b506104cc61078b3660046147d4565b611f34565b34801561079c57600080fd5b506104cc6107ab3660046145fc565b6120a3565b3480156107bc57600080fd5b506104446107cb366004614305565b60da602052600090815260409020546001600160a01b031681565b3480156107f257600080fd5b506033546001600160a01b0316610444565b34801561081057600080fd5b506104cc61081f366004614305565b6120ae565b34801561083057600080fd5b506103bc6120bc565b34801561084557600080fd5b506103bc610854366004614815565b61217a565b34801561086557600080fd5b5060d054610444906001600160a01b031681565b34801561088557600080fd5b50610414610894366004614305565b6121e8565b3480156108a557600080fd5b506103bc6108b4366004614815565b61226d565b3480156108c557600080fd5b506103de61238f565b3480156108da57600080fd5b506103bc6108e9366004614305565b6123af565b3480156108fa57600080fd5b506103bc6109093660046146ca565b6123e1565b34801561091a57600080fd5b506109236127b6565b6040516103eb9190614857565b34801561093c57600080fd5b506104cc61094b3660046145fc565b6127f0565b6103bc61095e366004614888565b5050565b34801561096e57600080fd5b506104cc61097d366004614305565b60d76020526000908152604090205481565b34801561099b57600080fd5b5060d654610444906001600160a01b031681565b3480156109bb57600080fd5b506104446109ca366004614888565b612888565b3480156109db57600080fd5b506103bc6109ea3660046148b4565b6128c0565b3480156109fb57600080fd5b506104cc610a0a366004614305565b612a5d565b348015610a1b57600080fd5b5060ce54610444906001600160a01b031681565b348015610a3b57600080fd5b50610444610a4a366004614305565b60db602052600090815260409020546001600160a01b031681565b348015610a7157600080fd5b506103bc610a803660046147d4565b612ae0565b348015610a9157600080fd5b5060cc54610444906001600160a01b031681565b348015610ab157600080fd5b506104cc610ac03660046145fc565b612ce2565b348015610ad157600080fd5b50610444610ae0366004614305565b60dc602052600090815260409020546001600160a01b031681565b348015610b0757600080fd5b5060c954610444906001600160a01b031681565b348015610b2757600080fd5b506104cc610b363660046145fc565b612d27565b348015610b4757600080fd5b506103bc610b56366004614305565b612d3e565b348015610b6757600080fd5b506104cc610b763660046145fc565b612db7565b348015610b8757600080fd5b506103bc610b96366004614936565b612dc2565b348015610ba757600080fd5b506103bc613006565b348015610bbc57600080fd5b50610414613364565b610bcd613597565b610bd960d2600061418f565b565b60d16020526000908152604090208054610bf490614964565b80601f0160208091040260200160405190810160405280929190818152602001828054610c2090614964565b8015610c6d5780601f10610c4257610100808354040283529160200191610c6d565b820191906000526020600020905b815481529060010190602001808311610c5057829003601f168201915b505050505081565b60ce546001600160a01b03828116600090815260d16020526040808220905163152eee4560e21b81529193849316916354bbb91491610cb691600401614999565b600060405180830381600087803b158015610cd057600080fd5b505af1158015610ce4573d6000803e3d6000fd5b505050506040513d6000823e601f3d908101601f19168201604052610d0c9190810190614a64565b805151909150604014610d5d5760405162461bcd60e51b81526020600482015260146024820152731d1cdcc81b595b58995c881b9bdd08195e1a5cdd60621b60448201526064015b60405180910390fd5b600181604001516001811115610d7557610d75614b43565b149392505050565b610d85613597565b6001600160a01b038116610dab5760405162461bcd60e51b8152600401610d5490614b59565b60ca80546001600160a01b0319166001600160a01b0392909216919091179055565b610dd5613597565b8035602082013511610e3d5760405162461bcd60e51b815260206004820152602b60248201527f696e76616c696420706172616d20736c617368416d6f756e742c20616e696d7560448201526a73203c3d20757074696d6560a81b6064820152608401610d54565b60005b6002811015610ede576000828260028110610e5d57610e5d614b82565b602002013511610ea05760405162461bcd60e51b815260206004820152600e60248201526d1a5b9d985b1a5908185b5bdd5b9d60921b6044820152606401610d54565b818160028110610eb257610eb2614b82565b602002013560d38260028110610eca57610eca614b82565b015580610ed681614bae565b915050610e40565b505060dd805460ff19166001179055565b610ef7613597565b6001600160a01b038116610f1d5760405162461bcd60e51b8152600401610d5490614b59565b60d680546001600160a01b0319166001600160a01b0392909216919091179055565b60cc54604051633e28391d60e01b81523360048201526001600160a01b0390911690633e28391d9060240160206040518083038186803b158015610f8257600080fd5b505afa158015610f96573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610fba9190614bc9565b610ff65760405162461bcd60e51b815260206004820152600d60248201526c3737ba103232b632b3b0ba37b960991b6044820152606401610d54565b33600090815260d760205260409020541561105f5760405162461bcd60e51b8152602060048201526024808201527f6d73672073656e64657220616c726561647920726571756573742077697468646044820152637261777360e01b6064820152608401610d54565b6040805160018082528183019092526000916020808301908036833701905050905060008160008151811061109657611096614b82565b602090810291909101015260408051600180825281830190925260009181602001602082028036833701905050905030816000815181106110d9576110d9614b82565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337505060ca5482519293506001600160a01b03169183915060009061113657611136614b82565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905061117c33612a5d565b8160008151811061118f5761118f614b82565b602090810291909101015260cf546040516329f0dcef60e21b81523360048201526000916001600160a01b03169063a7c373bc9060240160206040518083038186803b1580156111de57600080fd5b505afa1580156111f2573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112169190614beb565b905060006040518060400160405280336001600160a01b0316815260200161123d846135f1565b6001600160601b0316905260cc54604051631976849960e21b81523360048201529192506000916001600160a01b03909116906365da12649060240160206040518083038186803b15801561129157600080fd5b505afa1580156112a5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906112c99190614c04565b6040805160c08101825288815260208082018990528183018890523360608301819052608083018790526001600160a01b03851660a0840152600090815260d88252929092208151805194955091938493919261132a9284929101906141ad565b50602082810151805161134392600185019201906141ad565b506040820151805161135f91600284019160209091019061420e565b5060608201516003820180546001600160a01b039283166001600160a01b031991821617909155608084015180516020909101516001600160601b0316600160a01b029083161760048085019190915560a09094015160059093018054938316939091169290921790915560cf5460405163529075a560e01b8152600093919092169163529075a5916113fe9133918e918e918e918e918d9101614c95565b602060405180830381600087803b15801561141857600080fd5b505af115801561142c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906114509190614beb565b33600081815260d76020526040812083905588519293507f784199bc7528da846b1da87aeba29604de8f22a93e73379d5d1c7282fa3c727f9289919061149857611498614b82565b60200260200101516040516114c29291906001600160a01b03929092168252602082015260400190565b60405180910390a1505050505050505050565b606060d280548060200260200160405190810160405280929190818152602001828054801561152d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161150f575b5050505050905090565b60006115456106a383612a5d565b92915050565b60d2818154811061155b57600080fd5b6000918252602090912001546001600160a01b0316905081565b600260655414156115985760405162461bcd60e51b8152600401610d5490614d03565b600260655560006115ab84860186614d45565b90506115ba8160200151610c75565b156116075760405162461bcd60e51b815260206004820152601760248201527f746865206e6f646520616c7265616479206a61696c65640000000000000000006044820152606401610d54565b8051600090815260d560209081526040808320828501516001600160a01b0316845290915290205460ff16156116715760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e481cdb185cda1959608a1b6044820152606401610d54565b8051600090815260d560209081526040808320828501516001600160a01b039081168552925291829020805460ff1916600117905560ce549151911690633231a7f0906116c19088908890614e3d565b6040519081900381206001600160e01b031960e084901b1682526116eb9187908790600401614e4d565b602060405180830381600087803b15801561170557600080fd5b505af1158015611719573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061173d9190614bc9565b6117895760405162461bcd60e51b815260206004820152601c60248201527f7369676e6572206e6f74207473732067726f757020707562206b6579000000006044820152606401610d54565b6117928161365d565b7f9453459a6e9fa2069f1490c99cec15646afa157300f218a7f7840b23d09dbd3e816020015182606001516040516117cb929190614e83565b60405180910390a150506001606555505050565b6117e7613597565b6001600160a01b03811661180d5760405162461bcd60e51b8152600401610d5490614b59565b60ce80546001600160a01b0319166001600160a01b0392909216919091179055565b60cc546001600160a01b031633146118595760405162461bcd60e51b8152600401610d5490614ebe565b8151600181146118a55760405162461bcd60e51b815260206004820152601760248201527664656c65676174696f6e206f6e6c7920666f722074737360481b6044820152606401610d54565b81516001146118f65760405162461bcd60e51b815260206004820152601d60248201527f64656c65676174696f6e207368617265206f6e6c7920666f72207473730000006044820152606401610d54565b306001600160a01b03168360008151811061191357611913614b82565b60200260200101516001600160a01b03161461196d5760405162461bcd60e51b81526020600482015260196024820152781b5d5cdd081d5cd94818dd5c9c995b9d0818dbdb9d1c9858dd603a1b6044820152606401610d54565b6001600160a01b03858116600090815260da6020526040902054166119dd576001600160a01b03808616600081815260da602090815260408083208054958a166001600160a01b03199687168117909155835260d982528220805460018101825590835291200180549092161790555b5050505050565b60dd5460ff16611a365760405162461bcd60e51b815260206004820152601d60248201527f68617665206e6f74207365742074686520736c61736820616d6f756e740000006044820152606401610d54565b6000611a406138bd565b905060d36001015460cb5460cc5460405163778e55f360e01b815284916001600160a01b03169063778e55f390611a7d9033903090600401614f07565b60206040518083038186803b158015611a9557600080fd5b505afa158015611aa9573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611acd9190614beb565b611ad79190614f21565b611ae19190614f40565b1015611b265760405162461bcd60e51b8152602060048201526014602482015273496e73756666696369656e742062616c616e636560601b6044820152606401610d54565b60ce5433600090815260d160205260409081902090516310a7b12760e21b81526001600160a01b039092169163429ec49c91611b6491600401614999565b600060405180830381600087803b158015611b7e57600080fd5b505af11580156119dd573d6000803e3d6000fd5b611b9a613597565b610bd9600061393e565b60026065541415611bc75760405162461bcd60e51b8152600401610d5490614d03565b600260655560cc5460405163778e55f360e01b81526000916001600160a01b03169063778e55f390611bff9033903090600401614f07565b60206040518083038186803b158015611c1757600080fd5b505afa158015611c2b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c4f9190614beb565b11611c925760405162461bcd60e51b8152602060048201526013602482015272191bc81b9bdd081a185d994819195c1bdcda5d606a1b6044820152606401610d54565b60ce5433600090815260d16020526040908190209051630243371760e51b81526001600160a01b0390921691634866e2e091611cd091600401614999565b602060405180830381600087803b158015611cea57600080fd5b505af1158015611cfe573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611d229190614bc9565b80611db8575060ce5433600090815260d16020526040908190209051635e5e2fe360e11b81526001600160a01b039092169163bcbc5fc691611d6691600401614999565b602060405180830381600087803b158015611d8057600080fd5b505af1158015611d94573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611db89190614bc9565b611e165760405162461bcd60e51b815260206004820152602960248201527f6e6f742061742074686520696e6163746976652067726f7570206f722061637460448201526806976652067726f75760bc1b6064820152608401610d54565b60005b60d254811015611eb557336001600160a01b031660d28281548110611e4057611e40614b82565b6000918252602090912001546001600160a01b03161415611ea35760405162461bcd60e51b815260206004820152601a60248201527f616c726561647920696e2071756974526571756573744c6973740000000000006044820152606401610d54565b80611ead81614bae565b915050611e19565b5060d28054600181810183556000929092527ff2192e1030363415d7b4fb0406540a0060e8e2fc8982f3f32289379e11fa65460180546001600160a01b03191633179055606555565b600060cb5460001415611f0f575090565b60cb5482611f1b6138bd565b611f259190614f21565b6115459190614f40565b919050565b6000611f3e613990565b60c9546001600160a01b03163314611f685760405162461bcd60e51b8152600401610d5490614ebe565b60ca546001600160a01b03848116911614611feb5760405162461bcd60e51b815260206004820152603d60248201527f44656c65676174696f6e5368617265426173652e6465706f7369743a2043616e60448201527f206f6e6c79206465706f73697420756e6465726c79696e67546f6b656e0000006064820152608401610d54565b600082611ff66138bd565b6120009190614f62565b905080158061200f575060cb54155b1561201c57829150612038565b8060cb548461202b9190614f21565b6120359190614f40565b91505b8160cb600082825461204a9190614f79565b9091555050604080516001600160a01b038088168252861660208201529081018490527f5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f629060600160405180910390a1505b9392505050565b600061154582612ce2565b6000611545610b7683612a5d565b33600090815260d760205260409020546121275760405162461bcd60e51b815260206004820152602660248201527f6d73672073656e646572206d757374207265717565737420776974686472617760448201526508199a5c9cdd60d21b6064820152608401610d54565b33600081815260d760205260408082205460cf5491516331f8ee6760e11b8152600481018290526024810194909452604484019290925290916001600160a01b03909116906363f1dcce90606401611b64565b60d0546040516311a38c8560e01b81526001600160a01b03909116906311a38c85906121ac9030903390600401614f07565b600060405180830381600087803b1580156121c657600080fd5b505af11580156121da573d6000803e3d6000fd5b5050505061095e828261226d565b60cf546040516358775aaf60e11b81526000916001600160a01b03169063b0eeb55e9061221b9085903090600401614f07565b602060405180830381600087803b15801561223557600080fd5b505af1158015612249573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115459190614bc9565b600260655414156122905760405162461bcd60e51b8152600401610d5490614d03565b600260655560cc546040516336b87bd760e11b81523360048201526001600160a01b0390911690636d70f7ae9060240160206040518083038186803b1580156122d857600080fd5b505afa1580156122ec573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906123109190614bc9565b61236b5760405162461bcd60e51b815260206004820152602660248201527f6d73672073656e64657220686173206e6f742072656769737465726564206f7060448201526532b930ba37b960d11b6064820152608401610d54565b33600090815260d160205260409020612385908383614249565b5050600160655550565b606060405180608001604052806048815260200161519a60489139905090565b60d05460405163438bb7e560e01b81526001600160a01b039091169063438bb7e590611b649084903390600401614f07565b60cc546001600160a01b0316331461240b5760405162461bcd60e51b8152600401610d5490614ebe565b8151600181146124575760405162461bcd60e51b815260206004820152601760248201527664656c65676174696f6e206f6e6c7920666f722074737360481b6044820152606401610d54565b81516001146124a85760405162461bcd60e51b815260206004820152601d60248201527f64656c65676174696f6e207368617265206f6e6c7920666f72207473730000006044820152606401610d54565b306001600160a01b0316836000815181106124c5576124c5614b82565b60200260200101516001600160a01b03161461251f5760405162461bcd60e51b81526020600482015260196024820152781b5d5cdd081d5cd94818dd5c9c995b9d0818dbdb9d1c9858dd603a1b6044820152606401610d54565b8160008151811061253257612532614b82565b602002602001015160cf60009054906101000a90046001600160a01b03166001600160a01b03166305579ccc878660008151811061257257612572614b82565b60200260200101516040518363ffffffff1660e01b8152600401612597929190614f07565b60206040518083038186803b1580156125af57600080fd5b505afa1580156125c3573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906125e79190614beb565b14156119dd576001600160a01b038416600090815260d9602090815260408083208054825181850281018501909352808352919290919083018282801561265757602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311612639575b5050505050905060005b81518110156127ad57866001600160a01b031682828151811061268657612686614b82565b60200260200101516001600160a01b0316141561279b576001600160a01b038616600090815260d96020526040902082516126c390600190614f62565b815481106126d3576126d3614b82565b60009182526020808320909101546001600160a01b03898116845260d9909252604090922080549190921691908390811061271057612710614b82565b600091825260208083209190910180546001600160a01b0319166001600160a01b03948516179055918816815260d99091526040902080548061275557612755614f91565b60008281526020808220830160001990810180546001600160a01b031990811690915593019093556001600160a01b038a16815260da9092526040909120805490911690555b806127a581614bae565b915050612661565b50505050505050565b6127be6142bd565b60408051808201918290529060d39060029082845b8154815260200190600101908083116127d3575050505050905090565b60cf5460ca54604051631abeb0d960e01b81523060048201526001600160a01b0391821660248201526044810184905233606482015260009283921690631abeb0d990608401602060405180830381600087803b15801561285057600080fd5b505af1158015612864573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061209c9190614beb565b60d960205281600052604060002081815481106128a457600080fd5b6000918252602090912001546001600160a01b03169150829050565b600054610100900460ff16158080156128e05750600054600160ff909116105b806128fa5750303b1580156128fa575060005460ff166001145b61295d5760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b6064820152608401610d54565b6000805460ff191660011790558015612980576000805461ff0019166101001790555b6129886139d6565b612990613a05565b60ca80546001600160a01b03808a166001600160a01b03199283161790925560ce805489841690831617905560cf8054888416908316811790915560d08054888516908416811790915560c98054841690921790915560cc80548316909117905560cd805486841690831617905560d680549285169290911691909117905580156127ad576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a150505050505050565b60c954604051634e5b005d60e11b81526000916001600160a01b031690639cb600ba90612a909085903090600401614f07565b60206040518083038186803b158015612aa857600080fd5b505afa158015612abc573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906115459190614beb565b612ae8613990565b60c9546001600160a01b03163314612b125760405162461bcd60e51b8152600401610d5490614ebe565b60ca546001600160a01b03838116911614612ba05760405162461bcd60e51b815260206004820152604260248201527f44656c65676174696f6e5368617265426173652e77697468647261773a20436160448201527f6e206f6e6c792077697468647261772074686520737472617465677920746f6b60648201526132b760f11b608482015260a401610d54565b60cb54811115612c355760405162461bcd60e51b815260206004820152605460248201527f44656c65676174696f6e5368617265426173652e77697468647261773a20616d60448201527f6f756e74536861726573206d757374206265206c657373207468616e206f7220606482015273657175616c20746f20746f74616c53686172657360601b608482015260a401610d54565b60cb8054828103909155600082821415612c5857612c516138bd565b9050612c79565b8183612c626138bd565b612c6c9190614f21565b612c769190614f40565b90505b60ca54612c90906001600160a01b03168683613a34565b604080516001600160a01b038088168252861660208201529081018290527f9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb9060600160405180910390a15050505050565b600080612ced6138bd565b9050801580612cfc575060cb54155b15612d08575090919050565b8060cb5484612d179190614f21565b61209c9190614f40565b50919050565b60d38160028110612d3757600080fd5b0154905081565b612d46613597565b6001600160a01b038116612dab5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b6064820152608401610d54565b612db48161393e565b50565b600061154582611efe565b336001600160a01b03831614612e2b5760405162461bcd60e51b815260206004820152602860248201527f6d73672073656e64657220697320646966662077697468206f70657261746f72604482015267206164647265737360c01b6064820152608401610d54565b60cc546040516336b87bd760e11b81523360048201526001600160a01b0390911690636d70f7ae9060240160206040518083038186803b158015612e6e57600080fd5b505afa158015612e82573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612ea69190614bc9565b612f005760405162461bcd60e51b815260206004820152602560248201527f6d73672073656e646572206973206e6f742072656769737465726564206f70656044820152643930ba37b960d91b6064820152608401610d54565b6001600160a01b03818116600090815260dc60205260409020541615612f685760405162461bcd60e51b815260206004820152601960248201527f74686520636c61696d657220686173206265656e2075736564000000000000006044820152606401610d54565b6001600160a01b03828116600090815260db60205260409020541615612fbe576001600160a01b03808316600090815260db6020908152604080832054909316825260dc90522080546001600160a01b03191690555b6001600160a01b03918216600081815260db602090815260408083208054969095166001600160a01b0319968716811790955593825260dc9052919091208054909216179055565b33600090815260d760205260409020546130325760405162461bcd60e51b8152600401610d5490614fa7565b33600090815260d8602090815260408083208151815460e09481028201850190935260c0810183815290939192849284919084018282801561309d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161307f575b50505050508152602001600182018054806020026020016040519081016040528092919081815260200182805480156130ff57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116130e1575b505050505081526020016002820180548060200260200160405190810160405280929190818152602001828054801561315757602002820191906000526020600020905b815481526020019060010190808311613143575b505050918352505060038201546001600160a01b039081166020808401919091526040805180820182526004808701548086168352600160a01b90046001600160601b03169382019390935281850152600590940154821660609093019290925260c95492516329a8131760e11b81529394509190911691635350262e916131e191859101615076565b602060405180830381600087803b1580156131fb57600080fd5b505af115801561320f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906132339190614bc9565b61328d5760405162461bcd60e51b815260206004820152602560248201527f5468652077616974696e6720706572696f6420686173206e6f74207965742070604482015264185cdcd95960da1b6064820152608401610d54565b60cf5460405163218c446b60e21b81526001600160a01b039091169063863111ac906132c29033908590600190600401615089565b600060405180830381600087803b1580156132dc57600080fd5b505af11580156132f0573d6000803e3d6000fd5b505033600090815260d76020908152604080832083905560d890915281209250905061331c828261418f565b61332a60018301600061418f565b61333860028301600061418f565b506003810180546001600160a01b03199081169091556000600483015560059091018054909116905550565b33600090815260d760205260408120546133905760405162461bcd60e51b8152600401610d5490614fa7565b33600090815260d8602090815260408083208151815460e09481028201850190935260c081018381529093919284928491908401828280156133fb57602002820191906000526020600020905b81546001600160a01b031681526001909101906020018083116133dd575b505050505081526020016001820180548060200260200160405190810160405280929190818152602001828054801561345d57602002820191906000526020600020905b81546001600160a01b0316815260019091019060200180831161343f575b50505050508152602001600282018054806020026020016040519081016040528092919081815260200182805480156134b557602002820191906000526020600020905b8154815260200190600101908083116134a1575b505050918352505060038201546001600160a01b039081166020808401919091526040805180820182526004808701548086168352600160a01b90046001600160601b03169382019390935281850152600590940154821660609093019290925260c95492516329a8131760e11b81529394509190911691635350262e9161353f91859101615076565b602060405180830381600087803b15801561355957600080fd5b505af115801561356d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906135919190614bc9565b91505090565b6033546001600160a01b03163314610bd95760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e65726044820152606401610d54565b60006001600160601b038211156136595760405162461bcd60e51b815260206004820152602660248201527f53616665436173743a2076616c756520646f65736e27742066697420696e203960448201526536206269747360d01b6064820152608401610d54565b5090565b60dd5460ff166136af5760405162461bcd60e51b815260206004820152601d60248201527f68617665206e6f74207365742074686520736c61736820616d6f756e740000006044820152606401610d54565b6020808201516001600160a01b0316600090815260d19091526040812080546136d790614964565b80601f016020809104026020016040519081016040528092919081815260200182805461370390614964565b80156137505780601f1061372557610100808354040283529160200191613750565b820191906000526020600020905b81548152906001019060200180831161373357829003601f168201915b509394506000935061376192505050565b8260600151600181111561377757613777614b43565b14156137ee5760ce5460405163254ff98160e01b81526001600160a01b039091169063254ff981906137ad90849060040161437e565b600060405180830381600087803b1580156137c757600080fd5b505af11580156137db573d6000803e3d6000fd5b5050505061095e82602001516000613a86565b60018260600151600181111561380657613806614b43565b141561387d5760ce5460405163254ff98160e01b81526001600160a01b039091169063254ff9819061383c90849060040161437e565b600060405180830381600087803b15801561385657600080fd5b505af115801561386a573d6000803e3d6000fd5b5050505061095e82602001516001613a86565b60405162461bcd60e51b8152602060048201526015602482015274657272207479706520666f7220736c617368696e6760581b6044820152606401610d54565b60ca546040516370a0823160e01b81523060048201526000916001600160a01b0316906370a082319060240160206040518083038186803b15801561390157600080fd5b505afa158015613915573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906139399190614beb565b905090565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b60975460ff1615610bd95760405162461bcd60e51b815260206004820152601060248201526f14185d5cd8589b194e881c185d5cd95960821b6044820152606401610d54565b600054610100900460ff166139fd5760405162461bcd60e51b8152600401610d54906150bf565b610bd9613ee7565b600054610100900460ff16613a2c5760405162461bcd60e51b8152600401610d54906150bf565b610bd9613f17565b604080516001600160a01b038416602482015260448082018490528251808303909101815260649091019091526020810180516001600160e01b031663a9059cbb60e01b17905261054a908490613f45565b600080613a916138bd565b905060d38360028110613aa657613aa6614b82565b015460cb5460cc5460405163778e55f360e01b815284916001600160a01b03169063778e55f390613add908a903090600401614f07565b60206040518083038186803b158015613af557600080fd5b505afa158015613b09573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613b2d9190614beb565b613b379190614f21565b613b419190614f40565b1015613b8f5760405162461bcd60e51b815260206004820152601a60248201527f646f206e6f74206861766520656e6f75676874207368617265730000000000006044820152606401610d54565b8060cb5460d38560028110613ba657613ba6614b82565b0154613bb29190614f21565b613bbc9190614f40565b60cc5460405163778e55f360e01b81529193506000916001600160a01b039091169063778e55f390613bf49088903090600401614f07565b60206040518083038186803b158015613c0c57600080fd5b505afa158015613c20573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613c449190614beb565b60408051600180825281830190925291925060009190602080830190803683370190505090503081600081518110613c7e57613c7e614b82565b6001600160a01b039290921660209283029190910190910152604080516001808252818301909252600091816020016020820280368337019050509050600081600081518110613cd057613cd0614b82565b6020908102919091010152604080516001808252818301909252600091816020016020820280368337505060ca5482519293506001600160a01b031691839150600090613d1f57613d1f614b82565b6001600160a01b03928316602091820292909201810191909152908916600090815260d9825260408082208054825181860281018601909352808352929391929091830182828015613d9a57602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311613d7c575b5050505050905060005b8151811015613edb576000613dd1838381518110613dc457613dc4614b82565b6020026020010151612a5d565b604080516001808252818301909252919250600091906020808301908036833701905050905087613e02838c614f21565b613e0c9190614f40565b81600081518110613e1f57613e1f614b82565b602090810291909101015260cf5484516001600160a01b03909116906306f1f68490869086908110613e5357613e53614b82565b602090810291909101015160d6546040516001600160e01b031960e085901b168152613e9492916001600160a01b0316908c908b908d90899060040161510a565b600060405180830381600087803b158015613eae57600080fd5b505af1158015613ec2573d6000803e3d6000fd5b5050505050508080613ed390614bae565b915050613da4565b50505050505050505050565b600054610100900460ff16613f0e5760405162461bcd60e51b8152600401610d54906150bf565b610bd93361393e565b600054610100900460ff16613f3e5760405162461bcd60e51b8152600401610d54906150bf565b6001606555565b6000613f9a826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166140179092919063ffffffff16565b80519091501561054a5780806020019051810190613fb89190614bc9565b61054a5760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b6064820152608401610d54565b6060614026848460008561402e565b949350505050565b60608247101561408f5760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b6064820152608401610d54565b843b6140dd5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e74726163740000006044820152606401610d54565b600080866001600160a01b031685876040516140f9919061517d565b60006040518083038185875af1925050503d8060008114614136576040519150601f19603f3d011682016040523d82523d6000602084013e61413b565b606091505b509150915061414b828286614156565b979650505050505050565b6060831561416557508161209c565b8251156141755782518084602001fd5b8160405162461bcd60e51b8152600401610d54919061437e565b5080546000825590600052602060002090810190612db491906142db565b828054828255906000526020600020908101928215614202579160200282015b8281111561420257825182546001600160a01b0319166001600160a01b039091161782556020909201916001909101906141cd565b506136599291506142db565b828054828255906000526020600020908101928215614202579160200282015b8281111561420257825182559160200191906001019061422e565b82805461425590614964565b90600052602060002090601f0160209004810192826142775760008555614202565b82601f106142905782800160ff19823516178555614202565b82800160010185558215614202579182015b828111156142025782358255916020019190600101906142a2565b60405180604001604052806002906020820280368337509192915050565b5b8082111561365957600081556001016142dc565b6001600160a01b0381168114612db457600080fd5b60006020828403121561431757600080fd5b813561209c816142f0565b60005b8381101561433d578181015183820152602001614325565b8381111561434c576000848401525b50505050565b6000815180845261436a816020860160208601614322565b601f01601f19169290920160200192915050565b60208152600061209c6020830184614352565b6000604082840312156143a357600080fd5b82604083011115612d2157600080fd5b634e487b7160e01b600052604160045260246000fd5b6040516060810167ffffffffffffffff811182821017156143ec576143ec6143b3565b60405290565b6040516080810167ffffffffffffffff811182821017156143ec576143ec6143b3565b604051601f8201601f1916810167ffffffffffffffff8111828210171561443e5761443e6143b3565b604052919050565b600067ffffffffffffffff821115614460576144606143b3565b5060051b60200190565b600082601f83011261447b57600080fd5b8135602061449061448b83614446565b614415565b82815260059290921b840181019181810190868411156144af57600080fd5b8286015b848110156144d35780356144c6816142f0565b83529183019183016144b3565b509695505050505050565b600082601f8301126144ef57600080fd5b813560206144ff61448b83614446565b82815260059290921b8401810191818101908684111561451e57600080fd5b8286015b848110156144d35780358352918301918301614522565b60008060006060848603121561454e57600080fd5b8335614559816142f0565b9250602084013567ffffffffffffffff8082111561457657600080fd5b6145828783880161446a565b9350604086013591508082111561459857600080fd5b506145a5868287016144de565b9150509250925092565b6020808252825182820181905260009190848201906040850190845b818110156145f05783516001600160a01b0316835292840192918401916001016145cb565b50909695505050505050565b60006020828403121561460e57600080fd5b5035919050565b60008083601f84011261462757600080fd5b50813567ffffffffffffffff81111561463f57600080fd5b60208301915083602082850101111561465757600080fd5b9250929050565b6000806000806040858703121561467457600080fd5b843567ffffffffffffffff8082111561468c57600080fd5b61469888838901614615565b909650945060208701359150808211156146b157600080fd5b506146be87828801614615565b95989497509550505050565b600080600080608085870312156146e057600080fd5b84356146eb816142f0565b935060208501356146fb816142f0565b9250604085013567ffffffffffffffff8082111561471857600080fd5b6147248883890161446a565b9350606087013591508082111561473a57600080fd5b50614747878288016144de565b91505092959194509250565b80516001600160a01b031682526020908101516001600160601b0316910152565b6001600160a01b03848116825260808201906147936020840186614753565b808416606084015250949350505050565b600080604083850312156147b757600080fd5b8235915060208301356147c9816142f0565b809150509250929050565b6000806000606084860312156147e957600080fd5b83356147f4816142f0565b92506020840135614804816142f0565b929592945050506040919091013590565b6000806020838503121561482857600080fd5b823567ffffffffffffffff81111561483f57600080fd5b61484b85828601614615565b90969095509350505050565b60408101818360005b600281101561487f578151835260209283019290910190600101614860565b50505092915050565b6000806040838503121561489b57600080fd5b82356148a6816142f0565b946020939093013593505050565b60008060008060008060c087890312156148cd57600080fd5b86356148d8816142f0565b955060208701356148e8816142f0565b945060408701356148f8816142f0565b93506060870135614908816142f0565b92506080870135614918816142f0565b915060a0870135614928816142f0565b809150509295509295509295565b6000806040838503121561494957600080fd5b8235614954816142f0565b915060208301356147c9816142f0565b600181811c9082168061497857607f821691505b60208210811415612d2157634e487b7160e01b600052602260045260246000fd5b600060208083526000845481600182811c9150808316806149bb57607f831692505b8583108114156149d957634e487b7160e01b85526022600452602485fd5b8786018381526020018180156149f65760018114614a0757614a32565b60ff19861682528782019650614a32565b60008b81526020902060005b86811015614a2c57815484820152908501908901614a13565b83019750505b50949998505050505050505050565b8051611f2f816142f0565b60028110612db457600080fd5b8051611f2f81614a4c565b60006020808385031215614a7757600080fd5b825167ffffffffffffffff80821115614a8f57600080fd5b9084019060608287031215614aa357600080fd5b614aab6143c9565b825182811115614aba57600080fd5b8301601f81018813614acb57600080fd5b805183811115614add57614add6143b3565b614aef601f8201601f19168701614415565b93508084528886828401011115614b0557600080fd5b614b1481878601888501614322565b5050818152614b24848401614a41565b84820152614b3460408401614a59565b60408201529695505050505050565b634e487b7160e01b600052602160045260246000fd5b6020808252600f908201526e496e76616c6964206164647265737360881b604082015260600190565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b6000600019821415614bc257614bc2614b98565b5060010190565b600060208284031215614bdb57600080fd5b8151801515811461209c57600080fd5b600060208284031215614bfd57600080fd5b5051919050565b600060208284031215614c1657600080fd5b815161209c816142f0565b600081518084526020808501945080840160005b83811015614c5157815187529582019590820190600101614c35565b509495945050505050565b600081518084526020808501945080840160005b83811015614c515781516001600160a01b031687529582019590820190600101614c70565b6001600160a01b038716815260e060208201819052600090614cb990830188614c21565b8281036040840152614ccb8188614c5c565b90508281036060840152614cdf8187614c5c565b90508281036080840152614cf38186614c21565b91505061414b60a0830184614753565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b8035611f2f81614a4c565b60006020808385031215614d5857600080fd5b823567ffffffffffffffff80821115614d7057600080fd5b9084019060808287031215614d8457600080fd5b614d8c6143f2565b8235815283830135614d9d816142f0565b81850152604083013582811115614db357600080fd5b83019150601f82018713614dc657600080fd5b8135614dd461448b82614446565b81815260059190911b83018501908581019089831115614df357600080fd5b938601935b82851015614e1a578435614e0b816142f0565b82529386019390860190614df8565b604084015250614e2e905060608401614d3a565b60608201529695505050505050565b8183823760009101908152919050565b83815260406020820152816040820152818360608301376000818301606090810191909152601f909201601f1916010192915050565b6001600160a01b03831681526040810160028310614eb157634e487b7160e01b600052602160045260246000fd5b8260208301529392505050565b60208082526029908201527f44656c65676174696f6e5368617265426173652e6f6e6c7944656c656761746960408201526837b726b0b730b3b2b960b91b606082015260800190565b6001600160a01b0392831681529116602082015260400190565b6000816000190483118215151615614f3b57614f3b614b98565b500290565b600082614f5d57634e487b7160e01b600052601260045260246000fd5b500490565b600082821015614f7457614f74614b98565b500390565b60008219821115614f8c57614f8c614b98565b500190565b634e487b7160e01b600052603160045260246000fd5b60208082526024908201527f6d73672073656e64657220646964206e6f7420726571756573742077697468646040820152637261777360e01b606082015260800190565b6000815160e0845261500060e0850182614c5c565b9050602083015184820360208601526150198282614c5c565b915050604083015184820360408601526150338282614c21565b915050606083015160018060a01b0380821660608701526080850151915061505e6080870183614753565b8060a08601511660c087015250508091505092915050565b60208152600061209c6020830184614feb565b6001600160a01b03841681526060602082018190526000906150ad90830185614feb565b90508215156040830152949350505050565b6020808252602b908201527f496e697469616c697a61626c653a20636f6e7472616374206973206e6f74206960408201526a6e697469616c697a696e6760a81b606082015260800190565b6001600160a01b0387811682528616602082015260c06040820181905260009061513690830187614c5c565b82810360608401526151488187614c5c565b9050828103608084015261515c8186614c21565b905082810360a08401526151708185614c21565b9998505050505050505050565b6000825161518f818460208701614322565b919091019291505056fe4d616e746c6520746f6b656e2044656c65676174696f6e536861726520696d706c656d656e746174696f6e20666f72207375626d6f64756c657320617320616e206578616d706c65a26469706673582212203c3ff192131fa02ce684e7bf2e9ec6424dd4c79f063bc2ac176b6258e530fe0a64736f6c63430008090033",
}

// TssStakingSlashingABI is the input ABI used to generate the binding from.
// Deprecated: Use TssStakingSlashingMetaData.ABI instead.
var TssStakingSlashingABI = TssStakingSlashingMetaData.ABI

// TssStakingSlashingBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use TssStakingSlashingMetaData.Bin instead.
var TssStakingSlashingBin = TssStakingSlashingMetaData.Bin

// DeployTssStakingSlashing deploys a new Ethereum contract, binding an instance of TssStakingSlashing to it.
func DeployTssStakingSlashing(auth *bind.TransactOpts, backend bind.ContractBackend) (common.Address, *types.Transaction, *TssStakingSlashing, error) {
	parsed, err := TssStakingSlashingMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(TssStakingSlashingBin), backend)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &TssStakingSlashing{TssStakingSlashingCaller: TssStakingSlashingCaller{contract: contract}, TssStakingSlashingTransactor: TssStakingSlashingTransactor{contract: contract}, TssStakingSlashingFilterer: TssStakingSlashingFilterer{contract: contract}}, nil
}

// TssStakingSlashing is an auto generated Go binding around an Ethereum contract.
type TssStakingSlashing struct {
	TssStakingSlashingCaller     // Read-only binding to the contract
	TssStakingSlashingTransactor // Write-only binding to the contract
	TssStakingSlashingFilterer   // Log filterer for contract events
}

// TssStakingSlashingCaller is an auto generated read-only Go binding around an Ethereum contract.
type TssStakingSlashingCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssStakingSlashingTransactor is an auto generated write-only Go binding around an Ethereum contract.
type TssStakingSlashingTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssStakingSlashingFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type TssStakingSlashingFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// TssStakingSlashingSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type TssStakingSlashingSession struct {
	Contract     *TssStakingSlashing // Generic contract binding to set the session for
	CallOpts     bind.CallOpts       // Call options to use throughout this session
	TransactOpts bind.TransactOpts   // Transaction auth options to use throughout this session
}

// TssStakingSlashingCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type TssStakingSlashingCallerSession struct {
	Contract *TssStakingSlashingCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts             // Call options to use throughout this session
}

// TssStakingSlashingTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type TssStakingSlashingTransactorSession struct {
	Contract     *TssStakingSlashingTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts             // Transaction auth options to use throughout this session
}

// TssStakingSlashingRaw is an auto generated low-level Go binding around an Ethereum contract.
type TssStakingSlashingRaw struct {
	Contract *TssStakingSlashing // Generic contract binding to access the raw methods on
}

// TssStakingSlashingCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type TssStakingSlashingCallerRaw struct {
	Contract *TssStakingSlashingCaller // Generic read-only contract binding to access the raw methods on
}

// TssStakingSlashingTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type TssStakingSlashingTransactorRaw struct {
	Contract *TssStakingSlashingTransactor // Generic write-only contract binding to access the raw methods on
}

// NewTssStakingSlashing creates a new instance of TssStakingSlashing, bound to a specific deployed contract.
func NewTssStakingSlashing(address common.Address, backend bind.ContractBackend) (*TssStakingSlashing, error) {
	contract, err := bindTssStakingSlashing(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashing{TssStakingSlashingCaller: TssStakingSlashingCaller{contract: contract}, TssStakingSlashingTransactor: TssStakingSlashingTransactor{contract: contract}, TssStakingSlashingFilterer: TssStakingSlashingFilterer{contract: contract}}, nil
}

// NewTssStakingSlashingCaller creates a new read-only instance of TssStakingSlashing, bound to a specific deployed contract.
func NewTssStakingSlashingCaller(address common.Address, caller bind.ContractCaller) (*TssStakingSlashingCaller, error) {
	contract, err := bindTssStakingSlashing(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingCaller{contract: contract}, nil
}

// NewTssStakingSlashingTransactor creates a new write-only instance of TssStakingSlashing, bound to a specific deployed contract.
func NewTssStakingSlashingTransactor(address common.Address, transactor bind.ContractTransactor) (*TssStakingSlashingTransactor, error) {
	contract, err := bindTssStakingSlashing(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingTransactor{contract: contract}, nil
}

// NewTssStakingSlashingFilterer creates a new log filterer instance of TssStakingSlashing, bound to a specific deployed contract.
func NewTssStakingSlashingFilterer(address common.Address, filterer bind.ContractFilterer) (*TssStakingSlashingFilterer, error) {
	contract, err := bindTssStakingSlashing(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingFilterer{contract: contract}, nil
}

// bindTssStakingSlashing binds a generic wrapper to an already deployed contract.
func bindTssStakingSlashing(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := abi.JSON(strings.NewReader(TssStakingSlashingABI))
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssStakingSlashing *TssStakingSlashingRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssStakingSlashing.Contract.TssStakingSlashingCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssStakingSlashing *TssStakingSlashingRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.TssStakingSlashingTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssStakingSlashing *TssStakingSlashingRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.TssStakingSlashingTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_TssStakingSlashing *TssStakingSlashingCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _TssStakingSlashing.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_TssStakingSlashing *TssStakingSlashingTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_TssStakingSlashing *TssStakingSlashingTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.contract.Transact(opts, method, params...)
}

// ClaimerOperators is a free data retrieval call binding the contract method 0xea0c8c2f.
//
// Solidity: function claimerOperators(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) ClaimerOperators(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "claimerOperators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// ClaimerOperators is a free data retrieval call binding the contract method 0xea0c8c2f.
//
// Solidity: function claimerOperators(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) ClaimerOperators(arg0 common.Address) (common.Address, error) {
	return _TssStakingSlashing.Contract.ClaimerOperators(&_TssStakingSlashing.CallOpts, arg0)
}

// ClaimerOperators is a free data retrieval call binding the contract method 0xea0c8c2f.
//
// Solidity: function claimerOperators(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) ClaimerOperators(arg0 common.Address) (common.Address, error) {
	return _TssStakingSlashing.Contract.ClaimerOperators(&_TssStakingSlashing.CallOpts, arg0)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) Delegation(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "delegation")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) Delegation() (common.Address, error) {
	return _TssStakingSlashing.Contract.Delegation(&_TssStakingSlashing.CallOpts)
}

// Delegation is a free data retrieval call binding the contract method 0xdf5cf723.
//
// Solidity: function delegation() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Delegation() (common.Address, error) {
	return _TssStakingSlashing.Contract.Delegation(&_TssStakingSlashing.CallOpts)
}

// DelegationManager is a free data retrieval call binding the contract method 0xea4d3c9b.
//
// Solidity: function delegationManager() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) DelegationManager(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "delegationManager")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// DelegationManager is a free data retrieval call binding the contract method 0xea4d3c9b.
//
// Solidity: function delegationManager() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) DelegationManager() (common.Address, error) {
	return _TssStakingSlashing.Contract.DelegationManager(&_TssStakingSlashing.CallOpts)
}

// DelegationManager is a free data retrieval call binding the contract method 0xea4d3c9b.
//
// Solidity: function delegationManager() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) DelegationManager() (common.Address, error) {
	return _TssStakingSlashing.Contract.DelegationManager(&_TssStakingSlashing.CallOpts)
}

// Delegators is a free data retrieval call binding the contract method 0x8d23fc61.
//
// Solidity: function delegators(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) Delegators(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "delegators", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Delegators is a free data retrieval call binding the contract method 0x8d23fc61.
//
// Solidity: function delegators(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) Delegators(arg0 common.Address) (common.Address, error) {
	return _TssStakingSlashing.Contract.Delegators(&_TssStakingSlashing.CallOpts, arg0)
}

// Delegators is a free data retrieval call binding the contract method 0x8d23fc61.
//
// Solidity: function delegators(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Delegators(arg0 common.Address) (common.Address, error) {
	return _TssStakingSlashing.Contract.Delegators(&_TssStakingSlashing.CallOpts, arg0)
}

// Explanation is a free data retrieval call binding the contract method 0xab5921e1.
//
// Solidity: function explanation() pure returns(string)
func (_TssStakingSlashing *TssStakingSlashingCaller) Explanation(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "explanation")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Explanation is a free data retrieval call binding the contract method 0xab5921e1.
//
// Solidity: function explanation() pure returns(string)
func (_TssStakingSlashing *TssStakingSlashingSession) Explanation() (string, error) {
	return _TssStakingSlashing.Contract.Explanation(&_TssStakingSlashing.CallOpts)
}

// Explanation is a free data retrieval call binding the contract method 0xab5921e1.
//
// Solidity: function explanation() pure returns(string)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Explanation() (string, error) {
	return _TssStakingSlashing.Contract.Explanation(&_TssStakingSlashing.CallOpts)
}

// GetQuitRequestList is a free data retrieval call binding the contract method 0x490ab9d6.
//
// Solidity: function getQuitRequestList() view returns(address[])
func (_TssStakingSlashing *TssStakingSlashingCaller) GetQuitRequestList(opts *bind.CallOpts) ([]common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "getQuitRequestList")

	if err != nil {
		return *new([]common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new([]common.Address)).(*[]common.Address)

	return out0, err

}

// GetQuitRequestList is a free data retrieval call binding the contract method 0x490ab9d6.
//
// Solidity: function getQuitRequestList() view returns(address[])
func (_TssStakingSlashing *TssStakingSlashingSession) GetQuitRequestList() ([]common.Address, error) {
	return _TssStakingSlashing.Contract.GetQuitRequestList(&_TssStakingSlashing.CallOpts)
}

// GetQuitRequestList is a free data retrieval call binding the contract method 0x490ab9d6.
//
// Solidity: function getQuitRequestList() view returns(address[])
func (_TssStakingSlashing *TssStakingSlashingCallerSession) GetQuitRequestList() ([]common.Address, error) {
	return _TssStakingSlashing.Contract.GetQuitRequestList(&_TssStakingSlashing.CallOpts)
}

// GetSlashRecord is a free data retrieval call binding the contract method 0x829673ef.
//
// Solidity: function getSlashRecord(uint256 batchIndex, address user) view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingCaller) GetSlashRecord(opts *bind.CallOpts, batchIndex *big.Int, user common.Address) (bool, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "getSlashRecord", batchIndex, user)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// GetSlashRecord is a free data retrieval call binding the contract method 0x829673ef.
//
// Solidity: function getSlashRecord(uint256 batchIndex, address user) view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingSession) GetSlashRecord(batchIndex *big.Int, user common.Address) (bool, error) {
	return _TssStakingSlashing.Contract.GetSlashRecord(&_TssStakingSlashing.CallOpts, batchIndex, user)
}

// GetSlashRecord is a free data retrieval call binding the contract method 0x829673ef.
//
// Solidity: function getSlashRecord(uint256 batchIndex, address user) view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) GetSlashRecord(batchIndex *big.Int, user common.Address) (bool, error) {
	return _TssStakingSlashing.Contract.GetSlashRecord(&_TssStakingSlashing.CallOpts, batchIndex, user)
}

// GetSlashingParams is a free data retrieval call binding the contract method 0xb3fc1cb2.
//
// Solidity: function getSlashingParams() view returns(uint256[2])
func (_TssStakingSlashing *TssStakingSlashingCaller) GetSlashingParams(opts *bind.CallOpts) ([2]*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "getSlashingParams")

	if err != nil {
		return *new([2]*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new([2]*big.Int)).(*[2]*big.Int)

	return out0, err

}

// GetSlashingParams is a free data retrieval call binding the contract method 0xb3fc1cb2.
//
// Solidity: function getSlashingParams() view returns(uint256[2])
func (_TssStakingSlashing *TssStakingSlashingSession) GetSlashingParams() ([2]*big.Int, error) {
	return _TssStakingSlashing.Contract.GetSlashingParams(&_TssStakingSlashing.CallOpts)
}

// GetSlashingParams is a free data retrieval call binding the contract method 0xb3fc1cb2.
//
// Solidity: function getSlashingParams() view returns(uint256[2])
func (_TssStakingSlashing *TssStakingSlashingCallerSession) GetSlashingParams() ([2]*big.Int, error) {
	return _TssStakingSlashing.Contract.GetSlashingParams(&_TssStakingSlashing.CallOpts)
}

// IsSetParam is a free data retrieval call binding the contract method 0x289087ba.
//
// Solidity: function isSetParam() view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingCaller) IsSetParam(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "isSetParam")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsSetParam is a free data retrieval call binding the contract method 0x289087ba.
//
// Solidity: function isSetParam() view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingSession) IsSetParam() (bool, error) {
	return _TssStakingSlashing.Contract.IsSetParam(&_TssStakingSlashing.CallOpts)
}

// IsSetParam is a free data retrieval call binding the contract method 0x289087ba.
//
// Solidity: function isSetParam() view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) IsSetParam() (bool, error) {
	return _TssStakingSlashing.Contract.IsSetParam(&_TssStakingSlashing.CallOpts)
}

// Messenger is a free data retrieval call binding the contract method 0x3cb747bf.
//
// Solidity: function messenger() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) Messenger(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "messenger")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Messenger is a free data retrieval call binding the contract method 0x3cb747bf.
//
// Solidity: function messenger() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) Messenger() (common.Address, error) {
	return _TssStakingSlashing.Contract.Messenger(&_TssStakingSlashing.CallOpts)
}

// Messenger is a free data retrieval call binding the contract method 0x3cb747bf.
//
// Solidity: function messenger() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Messenger() (common.Address, error) {
	return _TssStakingSlashing.Contract.Messenger(&_TssStakingSlashing.CallOpts)
}

// OperatorClaimers is a free data retrieval call binding the contract method 0xd58ecaaa.
//
// Solidity: function operatorClaimers(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) OperatorClaimers(opts *bind.CallOpts, arg0 common.Address) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "operatorClaimers", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OperatorClaimers is a free data retrieval call binding the contract method 0xd58ecaaa.
//
// Solidity: function operatorClaimers(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) OperatorClaimers(arg0 common.Address) (common.Address, error) {
	return _TssStakingSlashing.Contract.OperatorClaimers(&_TssStakingSlashing.CallOpts, arg0)
}

// OperatorClaimers is a free data retrieval call binding the contract method 0xd58ecaaa.
//
// Solidity: function operatorClaimers(address ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) OperatorClaimers(arg0 common.Address) (common.Address, error) {
	return _TssStakingSlashing.Contract.OperatorClaimers(&_TssStakingSlashing.CallOpts, arg0)
}

// Operators is a free data retrieval call binding the contract method 0x13e7c9d8.
//
// Solidity: function operators(address ) view returns(bytes)
func (_TssStakingSlashing *TssStakingSlashingCaller) Operators(opts *bind.CallOpts, arg0 common.Address) ([]byte, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "operators", arg0)

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// Operators is a free data retrieval call binding the contract method 0x13e7c9d8.
//
// Solidity: function operators(address ) view returns(bytes)
func (_TssStakingSlashing *TssStakingSlashingSession) Operators(arg0 common.Address) ([]byte, error) {
	return _TssStakingSlashing.Contract.Operators(&_TssStakingSlashing.CallOpts, arg0)
}

// Operators is a free data retrieval call binding the contract method 0x13e7c9d8.
//
// Solidity: function operators(address ) view returns(bytes)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Operators(arg0 common.Address) ([]byte, error) {
	return _TssStakingSlashing.Contract.Operators(&_TssStakingSlashing.CallOpts, arg0)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) Owner(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "owner")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) Owner() (common.Address, error) {
	return _TssStakingSlashing.Contract.Owner(&_TssStakingSlashing.CallOpts)
}

// Owner is a free data retrieval call binding the contract method 0x8da5cb5b.
//
// Solidity: function owner() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Owner() (common.Address, error) {
	return _TssStakingSlashing.Contract.Owner(&_TssStakingSlashing.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingCaller) Paused(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "paused")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingSession) Paused() (bool, error) {
	return _TssStakingSlashing.Contract.Paused(&_TssStakingSlashing.CallOpts)
}

// Paused is a free data retrieval call binding the contract method 0x5c975abb.
//
// Solidity: function paused() view returns(bool)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Paused() (bool, error) {
	return _TssStakingSlashing.Contract.Paused(&_TssStakingSlashing.CallOpts)
}

// QuitRequestList is a free data retrieval call binding the contract method 0x57b0f05f.
//
// Solidity: function quitRequestList(uint256 ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) QuitRequestList(opts *bind.CallOpts, arg0 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "quitRequestList", arg0)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// QuitRequestList is a free data retrieval call binding the contract method 0x57b0f05f.
//
// Solidity: function quitRequestList(uint256 ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) QuitRequestList(arg0 *big.Int) (common.Address, error) {
	return _TssStakingSlashing.Contract.QuitRequestList(&_TssStakingSlashing.CallOpts, arg0)
}

// QuitRequestList is a free data retrieval call binding the contract method 0x57b0f05f.
//
// Solidity: function quitRequestList(uint256 ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) QuitRequestList(arg0 *big.Int) (common.Address, error) {
	return _TssStakingSlashing.Contract.QuitRequestList(&_TssStakingSlashing.CallOpts, arg0)
}

// RegulatoryAccount is a free data retrieval call binding the contract method 0xc665c35a.
//
// Solidity: function regulatoryAccount() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) RegulatoryAccount(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "regulatoryAccount")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// RegulatoryAccount is a free data retrieval call binding the contract method 0xc665c35a.
//
// Solidity: function regulatoryAccount() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) RegulatoryAccount() (common.Address, error) {
	return _TssStakingSlashing.Contract.RegulatoryAccount(&_TssStakingSlashing.CallOpts)
}

// RegulatoryAccount is a free data retrieval call binding the contract method 0xc665c35a.
//
// Solidity: function regulatoryAccount() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) RegulatoryAccount() (common.Address, error) {
	return _TssStakingSlashing.Contract.RegulatoryAccount(&_TssStakingSlashing.CallOpts)
}

// Shares is a free data retrieval call binding the contract method 0xce7c2ac2.
//
// Solidity: function shares(address user) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) Shares(opts *bind.CallOpts, user common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "shares", user)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// Shares is a free data retrieval call binding the contract method 0xce7c2ac2.
//
// Solidity: function shares(address user) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) Shares(user common.Address) (*big.Int, error) {
	return _TssStakingSlashing.Contract.Shares(&_TssStakingSlashing.CallOpts, user)
}

// Shares is a free data retrieval call binding the contract method 0xce7c2ac2.
//
// Solidity: function shares(address user) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Shares(user common.Address) (*big.Int, error) {
	return _TssStakingSlashing.Contract.Shares(&_TssStakingSlashing.CallOpts, user)
}

// SharesToUnderlying is a free data retrieval call binding the contract method 0xf3e73875.
//
// Solidity: function sharesToUnderlying(uint256 amountShares) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) SharesToUnderlying(opts *bind.CallOpts, amountShares *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "sharesToUnderlying", amountShares)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SharesToUnderlying is a free data retrieval call binding the contract method 0xf3e73875.
//
// Solidity: function sharesToUnderlying(uint256 amountShares) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) SharesToUnderlying(amountShares *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.SharesToUnderlying(&_TssStakingSlashing.CallOpts, amountShares)
}

// SharesToUnderlying is a free data retrieval call binding the contract method 0xf3e73875.
//
// Solidity: function sharesToUnderlying(uint256 amountShares) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) SharesToUnderlying(amountShares *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.SharesToUnderlying(&_TssStakingSlashing.CallOpts, amountShares)
}

// SharesToUnderlyingView is a free data retrieval call binding the contract method 0x7a8b2637.
//
// Solidity: function sharesToUnderlyingView(uint256 amountShares) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) SharesToUnderlyingView(opts *bind.CallOpts, amountShares *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "sharesToUnderlyingView", amountShares)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SharesToUnderlyingView is a free data retrieval call binding the contract method 0x7a8b2637.
//
// Solidity: function sharesToUnderlyingView(uint256 amountShares) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) SharesToUnderlyingView(amountShares *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.SharesToUnderlyingView(&_TssStakingSlashing.CallOpts, amountShares)
}

// SharesToUnderlyingView is a free data retrieval call binding the contract method 0x7a8b2637.
//
// Solidity: function sharesToUnderlyingView(uint256 amountShares) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) SharesToUnderlyingView(amountShares *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.SharesToUnderlyingView(&_TssStakingSlashing.CallOpts, amountShares)
}

// SlashAmount is a free data retrieval call binding the contract method 0xf2bd7400.
//
// Solidity: function slashAmount(uint256 ) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) SlashAmount(opts *bind.CallOpts, arg0 *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "slashAmount", arg0)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// SlashAmount is a free data retrieval call binding the contract method 0xf2bd7400.
//
// Solidity: function slashAmount(uint256 ) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) SlashAmount(arg0 *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.SlashAmount(&_TssStakingSlashing.CallOpts, arg0)
}

// SlashAmount is a free data retrieval call binding the contract method 0xf2bd7400.
//
// Solidity: function slashAmount(uint256 ) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) SlashAmount(arg0 *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.SlashAmount(&_TssStakingSlashing.CallOpts, arg0)
}

// Stakers is a free data retrieval call binding the contract method 0xc8b6cbf7.
//
// Solidity: function stakers(address , uint256 ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) Stakers(opts *bind.CallOpts, arg0 common.Address, arg1 *big.Int) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "stakers", arg0, arg1)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// Stakers is a free data retrieval call binding the contract method 0xc8b6cbf7.
//
// Solidity: function stakers(address , uint256 ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) Stakers(arg0 common.Address, arg1 *big.Int) (common.Address, error) {
	return _TssStakingSlashing.Contract.Stakers(&_TssStakingSlashing.CallOpts, arg0, arg1)
}

// Stakers is a free data retrieval call binding the contract method 0xc8b6cbf7.
//
// Solidity: function stakers(address , uint256 ) view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Stakers(arg0 common.Address, arg1 *big.Int) (common.Address, error) {
	return _TssStakingSlashing.Contract.Stakers(&_TssStakingSlashing.CallOpts, arg0, arg1)
}

// TotalShares is a free data retrieval call binding the contract method 0x3a98ef39.
//
// Solidity: function totalShares() view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) TotalShares(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "totalShares")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalShares is a free data retrieval call binding the contract method 0x3a98ef39.
//
// Solidity: function totalShares() view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) TotalShares() (*big.Int, error) {
	return _TssStakingSlashing.Contract.TotalShares(&_TssStakingSlashing.CallOpts)
}

// TotalShares is a free data retrieval call binding the contract method 0x3a98ef39.
//
// Solidity: function totalShares() view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) TotalShares() (*big.Int, error) {
	return _TssStakingSlashing.Contract.TotalShares(&_TssStakingSlashing.CallOpts)
}

// TssDelegationContract is a free data retrieval call binding the contract method 0x965a303f.
//
// Solidity: function tssDelegationContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) TssDelegationContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "tssDelegationContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TssDelegationContract is a free data retrieval call binding the contract method 0x965a303f.
//
// Solidity: function tssDelegationContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) TssDelegationContract() (common.Address, error) {
	return _TssStakingSlashing.Contract.TssDelegationContract(&_TssStakingSlashing.CallOpts)
}

// TssDelegationContract is a free data retrieval call binding the contract method 0x965a303f.
//
// Solidity: function tssDelegationContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) TssDelegationContract() (common.Address, error) {
	return _TssStakingSlashing.Contract.TssDelegationContract(&_TssStakingSlashing.CallOpts)
}

// TssDelegationManagerContract is a free data retrieval call binding the contract method 0x5716d17c.
//
// Solidity: function tssDelegationManagerContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) TssDelegationManagerContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "tssDelegationManagerContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TssDelegationManagerContract is a free data retrieval call binding the contract method 0x5716d17c.
//
// Solidity: function tssDelegationManagerContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) TssDelegationManagerContract() (common.Address, error) {
	return _TssStakingSlashing.Contract.TssDelegationManagerContract(&_TssStakingSlashing.CallOpts)
}

// TssDelegationManagerContract is a free data retrieval call binding the contract method 0x5716d17c.
//
// Solidity: function tssDelegationManagerContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) TssDelegationManagerContract() (common.Address, error) {
	return _TssStakingSlashing.Contract.TssDelegationManagerContract(&_TssStakingSlashing.CallOpts)
}

// TssGroupContract is a free data retrieval call binding the contract method 0xd323041d.
//
// Solidity: function tssGroupContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) TssGroupContract(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "tssGroupContract")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// TssGroupContract is a free data retrieval call binding the contract method 0xd323041d.
//
// Solidity: function tssGroupContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) TssGroupContract() (common.Address, error) {
	return _TssStakingSlashing.Contract.TssGroupContract(&_TssStakingSlashing.CallOpts)
}

// TssGroupContract is a free data retrieval call binding the contract method 0xd323041d.
//
// Solidity: function tssGroupContract() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) TssGroupContract() (common.Address, error) {
	return _TssStakingSlashing.Contract.TssGroupContract(&_TssStakingSlashing.CallOpts)
}

// UnderlyingToShares is a free data retrieval call binding the contract method 0x8c871019.
//
// Solidity: function underlyingToShares(uint256 amountUnderlying) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) UnderlyingToShares(opts *bind.CallOpts, amountUnderlying *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "underlyingToShares", amountUnderlying)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UnderlyingToShares is a free data retrieval call binding the contract method 0x8c871019.
//
// Solidity: function underlyingToShares(uint256 amountUnderlying) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) UnderlyingToShares(amountUnderlying *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.UnderlyingToShares(&_TssStakingSlashing.CallOpts, amountUnderlying)
}

// UnderlyingToShares is a free data retrieval call binding the contract method 0x8c871019.
//
// Solidity: function underlyingToShares(uint256 amountUnderlying) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) UnderlyingToShares(amountUnderlying *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.UnderlyingToShares(&_TssStakingSlashing.CallOpts, amountUnderlying)
}

// UnderlyingToSharesView is a free data retrieval call binding the contract method 0xe3dae51c.
//
// Solidity: function underlyingToSharesView(uint256 amountUnderlying) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) UnderlyingToSharesView(opts *bind.CallOpts, amountUnderlying *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "underlyingToSharesView", amountUnderlying)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UnderlyingToSharesView is a free data retrieval call binding the contract method 0xe3dae51c.
//
// Solidity: function underlyingToSharesView(uint256 amountUnderlying) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) UnderlyingToSharesView(amountUnderlying *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.UnderlyingToSharesView(&_TssStakingSlashing.CallOpts, amountUnderlying)
}

// UnderlyingToSharesView is a free data retrieval call binding the contract method 0xe3dae51c.
//
// Solidity: function underlyingToSharesView(uint256 amountUnderlying) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) UnderlyingToSharesView(amountUnderlying *big.Int) (*big.Int, error) {
	return _TssStakingSlashing.Contract.UnderlyingToSharesView(&_TssStakingSlashing.CallOpts, amountUnderlying)
}

// UnderlyingToken is a free data retrieval call binding the contract method 0x2495a599.
//
// Solidity: function underlyingToken() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCaller) UnderlyingToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "underlyingToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// UnderlyingToken is a free data retrieval call binding the contract method 0x2495a599.
//
// Solidity: function underlyingToken() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingSession) UnderlyingToken() (common.Address, error) {
	return _TssStakingSlashing.Contract.UnderlyingToken(&_TssStakingSlashing.CallOpts)
}

// UnderlyingToken is a free data retrieval call binding the contract method 0x2495a599.
//
// Solidity: function underlyingToken() view returns(address)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) UnderlyingToken() (common.Address, error) {
	return _TssStakingSlashing.Contract.UnderlyingToken(&_TssStakingSlashing.CallOpts)
}

// UserUnderlyingView is a free data retrieval call binding the contract method 0x553ca5f8.
//
// Solidity: function userUnderlyingView(address user) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCaller) UserUnderlyingView(opts *bind.CallOpts, user common.Address) (*big.Int, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "userUnderlyingView", user)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// UserUnderlyingView is a free data retrieval call binding the contract method 0x553ca5f8.
//
// Solidity: function userUnderlyingView(address user) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) UserUnderlyingView(user common.Address) (*big.Int, error) {
	return _TssStakingSlashing.Contract.UserUnderlyingView(&_TssStakingSlashing.CallOpts, user)
}

// UserUnderlyingView is a free data retrieval call binding the contract method 0x553ca5f8.
//
// Solidity: function userUnderlyingView(address user) view returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) UserUnderlyingView(user common.Address) (*big.Int, error) {
	return _TssStakingSlashing.Contract.UserUnderlyingView(&_TssStakingSlashing.CallOpts, user)
}

// WithdrawalRoots is a free data retrieval call binding the contract method 0xc3a82e11.
//
// Solidity: function withdrawalRoots(address ) view returns(bytes32)
func (_TssStakingSlashing *TssStakingSlashingCaller) WithdrawalRoots(opts *bind.CallOpts, arg0 common.Address) ([32]byte, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "withdrawalRoots", arg0)

	if err != nil {
		return *new([32]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([32]byte)).(*[32]byte)

	return out0, err

}

// WithdrawalRoots is a free data retrieval call binding the contract method 0xc3a82e11.
//
// Solidity: function withdrawalRoots(address ) view returns(bytes32)
func (_TssStakingSlashing *TssStakingSlashingSession) WithdrawalRoots(arg0 common.Address) ([32]byte, error) {
	return _TssStakingSlashing.Contract.WithdrawalRoots(&_TssStakingSlashing.CallOpts, arg0)
}

// WithdrawalRoots is a free data retrieval call binding the contract method 0xc3a82e11.
//
// Solidity: function withdrawalRoots(address ) view returns(bytes32)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) WithdrawalRoots(arg0 common.Address) ([32]byte, error) {
	return _TssStakingSlashing.Contract.WithdrawalRoots(&_TssStakingSlashing.CallOpts, arg0)
}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(address depositor, (address,uint96) withdrawerAndNonce, address delegatedAddress)
func (_TssStakingSlashing *TssStakingSlashingCaller) Withdrawals(opts *bind.CallOpts, arg0 common.Address) (struct {
	Depositor          common.Address
	WithdrawerAndNonce IDelegationManagerWithdrawerAndNonce
	DelegatedAddress   common.Address
}, error) {
	var out []interface{}
	err := _TssStakingSlashing.contract.Call(opts, &out, "withdrawals", arg0)

	outstruct := new(struct {
		Depositor          common.Address
		WithdrawerAndNonce IDelegationManagerWithdrawerAndNonce
		DelegatedAddress   common.Address
	})
	if err != nil {
		return *outstruct, err
	}

	outstruct.Depositor = *abi.ConvertType(out[0], new(common.Address)).(*common.Address)
	outstruct.WithdrawerAndNonce = *abi.ConvertType(out[1], new(IDelegationManagerWithdrawerAndNonce)).(*IDelegationManagerWithdrawerAndNonce)
	outstruct.DelegatedAddress = *abi.ConvertType(out[2], new(common.Address)).(*common.Address)

	return *outstruct, err

}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(address depositor, (address,uint96) withdrawerAndNonce, address delegatedAddress)
func (_TssStakingSlashing *TssStakingSlashingSession) Withdrawals(arg0 common.Address) (struct {
	Depositor          common.Address
	WithdrawerAndNonce IDelegationManagerWithdrawerAndNonce
	DelegatedAddress   common.Address
}, error) {
	return _TssStakingSlashing.Contract.Withdrawals(&_TssStakingSlashing.CallOpts, arg0)
}

// Withdrawals is a free data retrieval call binding the contract method 0x7a9262a2.
//
// Solidity: function withdrawals(address ) view returns(address depositor, (address,uint96) withdrawerAndNonce, address delegatedAddress)
func (_TssStakingSlashing *TssStakingSlashingCallerSession) Withdrawals(arg0 common.Address) (struct {
	Depositor          common.Address
	WithdrawerAndNonce IDelegationManagerWithdrawerAndNonce
	DelegatedAddress   common.Address
}, error) {
	return _TssStakingSlashing.Contract.Withdrawals(&_TssStakingSlashing.CallOpts, arg0)
}

// CanCompleteQueuedWithdrawal is a paid mutator transaction binding the contract method 0xfee17dd5.
//
// Solidity: function canCompleteQueuedWithdrawal() returns(bool)
func (_TssStakingSlashing *TssStakingSlashingTransactor) CanCompleteQueuedWithdrawal(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "canCompleteQueuedWithdrawal")
}

// CanCompleteQueuedWithdrawal is a paid mutator transaction binding the contract method 0xfee17dd5.
//
// Solidity: function canCompleteQueuedWithdrawal() returns(bool)
func (_TssStakingSlashing *TssStakingSlashingSession) CanCompleteQueuedWithdrawal() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.CanCompleteQueuedWithdrawal(&_TssStakingSlashing.TransactOpts)
}

// CanCompleteQueuedWithdrawal is a paid mutator transaction binding the contract method 0xfee17dd5.
//
// Solidity: function canCompleteQueuedWithdrawal() returns(bool)
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) CanCompleteQueuedWithdrawal() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.CanCompleteQueuedWithdrawal(&_TssStakingSlashing.TransactOpts)
}

// ClearQuitRequestList is a paid mutator transaction binding the contract method 0x111b8c02.
//
// Solidity: function clearQuitRequestList() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) ClearQuitRequestList(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "clearQuitRequestList")
}

// ClearQuitRequestList is a paid mutator transaction binding the contract method 0x111b8c02.
//
// Solidity: function clearQuitRequestList() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) ClearQuitRequestList() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.ClearQuitRequestList(&_TssStakingSlashing.TransactOpts)
}

// ClearQuitRequestList is a paid mutator transaction binding the contract method 0x111b8c02.
//
// Solidity: function clearQuitRequestList() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) ClearQuitRequestList() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.ClearQuitRequestList(&_TssStakingSlashing.TransactOpts)
}

// CompleteWithdraw is a paid mutator transaction binding the contract method 0xf756fa21.
//
// Solidity: function completeWithdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) CompleteWithdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "completeWithdraw")
}

// CompleteWithdraw is a paid mutator transaction binding the contract method 0xf756fa21.
//
// Solidity: function completeWithdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) CompleteWithdraw() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.CompleteWithdraw(&_TssStakingSlashing.TransactOpts)
}

// CompleteWithdraw is a paid mutator transaction binding the contract method 0xf756fa21.
//
// Solidity: function completeWithdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) CompleteWithdraw() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.CompleteWithdraw(&_TssStakingSlashing.TransactOpts)
}

// DelegateTo is a paid mutator transaction binding the contract method 0xac637c7a.
//
// Solidity: function delegateTo(address _operator) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) DelegateTo(opts *bind.TransactOpts, _operator common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "delegateTo", _operator)
}

// DelegateTo is a paid mutator transaction binding the contract method 0xac637c7a.
//
// Solidity: function delegateTo(address _operator) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) DelegateTo(_operator common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.DelegateTo(&_TssStakingSlashing.TransactOpts, _operator)
}

// DelegateTo is a paid mutator transaction binding the contract method 0xac637c7a.
//
// Solidity: function delegateTo(address _operator) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) DelegateTo(_operator common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.DelegateTo(&_TssStakingSlashing.TransactOpts, _operator)
}

// Deposit is a paid mutator transaction binding the contract method 0x8340f549.
//
// Solidity: function deposit(address depositor, address token, uint256 amount) returns(uint256 newShares)
func (_TssStakingSlashing *TssStakingSlashingTransactor) Deposit(opts *bind.TransactOpts, depositor common.Address, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "deposit", depositor, token, amount)
}

// Deposit is a paid mutator transaction binding the contract method 0x8340f549.
//
// Solidity: function deposit(address depositor, address token, uint256 amount) returns(uint256 newShares)
func (_TssStakingSlashing *TssStakingSlashingSession) Deposit(depositor common.Address, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Deposit(&_TssStakingSlashing.TransactOpts, depositor, token, amount)
}

// Deposit is a paid mutator transaction binding the contract method 0x8340f549.
//
// Solidity: function deposit(address depositor, address token, uint256 amount) returns(uint256 newShares)
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) Deposit(depositor common.Address, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Deposit(&_TssStakingSlashing.TransactOpts, depositor, token, amount)
}

// Deposit0 is a paid mutator transaction binding the contract method 0xb6b55f25.
//
// Solidity: function deposit(uint256 amount) returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingTransactor) Deposit0(opts *bind.TransactOpts, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "deposit0", amount)
}

// Deposit0 is a paid mutator transaction binding the contract method 0xb6b55f25.
//
// Solidity: function deposit(uint256 amount) returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) Deposit0(amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Deposit0(&_TssStakingSlashing.TransactOpts, amount)
}

// Deposit0 is a paid mutator transaction binding the contract method 0xb6b55f25.
//
// Solidity: function deposit(uint256 amount) returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) Deposit0(amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Deposit0(&_TssStakingSlashing.TransactOpts, amount)
}

// Initialize is a paid mutator transaction binding the contract method 0xcc2a9a5b.
//
// Solidity: function initialize(address _mantleToken, address _tssGroupContract, address _delegationManager, address _delegation, address _l1messenger, address _regulatoryAccount) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) Initialize(opts *bind.TransactOpts, _mantleToken common.Address, _tssGroupContract common.Address, _delegationManager common.Address, _delegation common.Address, _l1messenger common.Address, _regulatoryAccount common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "initialize", _mantleToken, _tssGroupContract, _delegationManager, _delegation, _l1messenger, _regulatoryAccount)
}

// Initialize is a paid mutator transaction binding the contract method 0xcc2a9a5b.
//
// Solidity: function initialize(address _mantleToken, address _tssGroupContract, address _delegationManager, address _delegation, address _l1messenger, address _regulatoryAccount) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) Initialize(_mantleToken common.Address, _tssGroupContract common.Address, _delegationManager common.Address, _delegation common.Address, _l1messenger common.Address, _regulatoryAccount common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Initialize(&_TssStakingSlashing.TransactOpts, _mantleToken, _tssGroupContract, _delegationManager, _delegation, _l1messenger, _regulatoryAccount)
}

// Initialize is a paid mutator transaction binding the contract method 0xcc2a9a5b.
//
// Solidity: function initialize(address _mantleToken, address _tssGroupContract, address _delegationManager, address _delegation, address _l1messenger, address _regulatoryAccount) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) Initialize(_mantleToken common.Address, _tssGroupContract common.Address, _delegationManager common.Address, _delegation common.Address, _l1messenger common.Address, _regulatoryAccount common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Initialize(&_TssStakingSlashing.TransactOpts, _mantleToken, _tssGroupContract, _delegationManager, _delegation, _l1messenger, _regulatoryAccount)
}

// IsCanOperator is a paid mutator transaction binding the contract method 0xa458413a.
//
// Solidity: function isCanOperator(address _addr) returns(bool)
func (_TssStakingSlashing *TssStakingSlashingTransactor) IsCanOperator(opts *bind.TransactOpts, _addr common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "isCanOperator", _addr)
}

// IsCanOperator is a paid mutator transaction binding the contract method 0xa458413a.
//
// Solidity: function isCanOperator(address _addr) returns(bool)
func (_TssStakingSlashing *TssStakingSlashingSession) IsCanOperator(_addr common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.IsCanOperator(&_TssStakingSlashing.TransactOpts, _addr)
}

// IsCanOperator is a paid mutator transaction binding the contract method 0xa458413a.
//
// Solidity: function isCanOperator(address _addr) returns(bool)
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) IsCanOperator(_addr common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.IsCanOperator(&_TssStakingSlashing.TransactOpts, _addr)
}

// IsJailed is a paid mutator transaction binding the contract method 0x14bfb527.
//
// Solidity: function isJailed(address user) returns(bool)
func (_TssStakingSlashing *TssStakingSlashingTransactor) IsJailed(opts *bind.TransactOpts, user common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "isJailed", user)
}

// IsJailed is a paid mutator transaction binding the contract method 0x14bfb527.
//
// Solidity: function isJailed(address user) returns(bool)
func (_TssStakingSlashing *TssStakingSlashingSession) IsJailed(user common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.IsJailed(&_TssStakingSlashing.TransactOpts, user)
}

// IsJailed is a paid mutator transaction binding the contract method 0x14bfb527.
//
// Solidity: function isJailed(address user) returns(bool)
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) IsJailed(user common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.IsJailed(&_TssStakingSlashing.TransactOpts, user)
}

// OnDelegationReceived is a paid mutator transaction binding the contract method 0x412cdd2c.
//
// Solidity: function onDelegationReceived(address delegator, address[] investorDelegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) OnDelegationReceived(opts *bind.TransactOpts, delegator common.Address, investorDelegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "onDelegationReceived", delegator, investorDelegationShares, investorShares)
}

// OnDelegationReceived is a paid mutator transaction binding the contract method 0x412cdd2c.
//
// Solidity: function onDelegationReceived(address delegator, address[] investorDelegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) OnDelegationReceived(delegator common.Address, investorDelegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationReceived(&_TssStakingSlashing.TransactOpts, delegator, investorDelegationShares, investorShares)
}

// OnDelegationReceived is a paid mutator transaction binding the contract method 0x412cdd2c.
//
// Solidity: function onDelegationReceived(address delegator, address[] investorDelegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) OnDelegationReceived(delegator common.Address, investorDelegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationReceived(&_TssStakingSlashing.TransactOpts, delegator, investorDelegationShares, investorShares)
}

// OnDelegationReceived0 is a paid mutator transaction binding the contract method 0x6dd300b5.
//
// Solidity: function onDelegationReceived(address delegator, address operator, address[] delegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) OnDelegationReceived0(opts *bind.TransactOpts, delegator common.Address, operator common.Address, delegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "onDelegationReceived0", delegator, operator, delegationShares, investorShares)
}

// OnDelegationReceived0 is a paid mutator transaction binding the contract method 0x6dd300b5.
//
// Solidity: function onDelegationReceived(address delegator, address operator, address[] delegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) OnDelegationReceived0(delegator common.Address, operator common.Address, delegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationReceived0(&_TssStakingSlashing.TransactOpts, delegator, operator, delegationShares, investorShares)
}

// OnDelegationReceived0 is a paid mutator transaction binding the contract method 0x6dd300b5.
//
// Solidity: function onDelegationReceived(address delegator, address operator, address[] delegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) OnDelegationReceived0(delegator common.Address, operator common.Address, delegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationReceived0(&_TssStakingSlashing.TransactOpts, delegator, operator, delegationShares, investorShares)
}

// OnDelegationWithdrawn is a paid mutator transaction binding the contract method 0xb1bbdc41.
//
// Solidity: function onDelegationWithdrawn(address delegator, address operator, address[] delegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) OnDelegationWithdrawn(opts *bind.TransactOpts, delegator common.Address, operator common.Address, delegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "onDelegationWithdrawn", delegator, operator, delegationShares, investorShares)
}

// OnDelegationWithdrawn is a paid mutator transaction binding the contract method 0xb1bbdc41.
//
// Solidity: function onDelegationWithdrawn(address delegator, address operator, address[] delegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) OnDelegationWithdrawn(delegator common.Address, operator common.Address, delegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationWithdrawn(&_TssStakingSlashing.TransactOpts, delegator, operator, delegationShares, investorShares)
}

// OnDelegationWithdrawn is a paid mutator transaction binding the contract method 0xb1bbdc41.
//
// Solidity: function onDelegationWithdrawn(address delegator, address operator, address[] delegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) OnDelegationWithdrawn(delegator common.Address, operator common.Address, delegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationWithdrawn(&_TssStakingSlashing.TransactOpts, delegator, operator, delegationShares, investorShares)
}

// OnDelegationWithdrawn0 is a paid mutator transaction binding the contract method 0xf47c83c5.
//
// Solidity: function onDelegationWithdrawn(address delegator, address[] investorDelegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) OnDelegationWithdrawn0(opts *bind.TransactOpts, delegator common.Address, investorDelegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "onDelegationWithdrawn0", delegator, investorDelegationShares, investorShares)
}

// OnDelegationWithdrawn0 is a paid mutator transaction binding the contract method 0xf47c83c5.
//
// Solidity: function onDelegationWithdrawn(address delegator, address[] investorDelegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) OnDelegationWithdrawn0(delegator common.Address, investorDelegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationWithdrawn0(&_TssStakingSlashing.TransactOpts, delegator, investorDelegationShares, investorShares)
}

// OnDelegationWithdrawn0 is a paid mutator transaction binding the contract method 0xf47c83c5.
//
// Solidity: function onDelegationWithdrawn(address delegator, address[] investorDelegationShares, uint256[] investorShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) OnDelegationWithdrawn0(delegator common.Address, investorDelegationShares []common.Address, investorShares []*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.OnDelegationWithdrawn0(&_TssStakingSlashing.TransactOpts, delegator, investorDelegationShares, investorShares)
}

// PayForService is a paid mutator transaction binding the contract method 0xbbb26c63.
//
// Solidity: function payForService(address token, uint256 amount) payable returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) PayForService(opts *bind.TransactOpts, token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "payForService", token, amount)
}

// PayForService is a paid mutator transaction binding the contract method 0xbbb26c63.
//
// Solidity: function payForService(address token, uint256 amount) payable returns()
func (_TssStakingSlashing *TssStakingSlashingSession) PayForService(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.PayForService(&_TssStakingSlashing.TransactOpts, token, amount)
}

// PayForService is a paid mutator transaction binding the contract method 0xbbb26c63.
//
// Solidity: function payForService(address token, uint256 amount) payable returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) PayForService(token common.Address, amount *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.PayForService(&_TssStakingSlashing.TransactOpts, token, amount)
}

// QuitRequest is a paid mutator transaction binding the contract method 0x740efec3.
//
// Solidity: function quitRequest() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) QuitRequest(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "quitRequest")
}

// QuitRequest is a paid mutator transaction binding the contract method 0x740efec3.
//
// Solidity: function quitRequest() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) QuitRequest() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.QuitRequest(&_TssStakingSlashing.TransactOpts)
}

// QuitRequest is a paid mutator transaction binding the contract method 0x740efec3.
//
// Solidity: function quitRequest() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) QuitRequest() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.QuitRequest(&_TssStakingSlashing.TransactOpts)
}

// RegisterAsOperator is a paid mutator transaction binding the contract method 0x95cf5bea.
//
// Solidity: function registerAsOperator(bytes _pubKey) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) RegisterAsOperator(opts *bind.TransactOpts, _pubKey []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "registerAsOperator", _pubKey)
}

// RegisterAsOperator is a paid mutator transaction binding the contract method 0x95cf5bea.
//
// Solidity: function registerAsOperator(bytes _pubKey) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) RegisterAsOperator(_pubKey []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.RegisterAsOperator(&_TssStakingSlashing.TransactOpts, _pubKey)
}

// RegisterAsOperator is a paid mutator transaction binding the contract method 0x95cf5bea.
//
// Solidity: function registerAsOperator(bytes _pubKey) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) RegisterAsOperator(_pubKey []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.RegisterAsOperator(&_TssStakingSlashing.TransactOpts, _pubKey)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) RenounceOwnership(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "renounceOwnership")
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.RenounceOwnership(&_TssStakingSlashing.TransactOpts)
}

// RenounceOwnership is a paid mutator transaction binding the contract method 0x715018a6.
//
// Solidity: function renounceOwnership() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) RenounceOwnership() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.RenounceOwnership(&_TssStakingSlashing.TransactOpts)
}

// SetClaimer is a paid mutator transaction binding the contract method 0xf5cf673b.
//
// Solidity: function setClaimer(address _operator, address _claimer) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) SetClaimer(opts *bind.TransactOpts, _operator common.Address, _claimer common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "setClaimer", _operator, _claimer)
}

// SetClaimer is a paid mutator transaction binding the contract method 0xf5cf673b.
//
// Solidity: function setClaimer(address _operator, address _claimer) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) SetClaimer(_operator common.Address, _claimer common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetClaimer(&_TssStakingSlashing.TransactOpts, _operator, _claimer)
}

// SetClaimer is a paid mutator transaction binding the contract method 0xf5cf673b.
//
// Solidity: function setClaimer(address _operator, address _claimer) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) SetClaimer(_operator common.Address, _claimer common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetClaimer(&_TssStakingSlashing.TransactOpts, _operator, _claimer)
}

// SetPublicKey is a paid mutator transaction binding the contract method 0xa91d58b4.
//
// Solidity: function setPublicKey(bytes _pubKey) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) SetPublicKey(opts *bind.TransactOpts, _pubKey []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "setPublicKey", _pubKey)
}

// SetPublicKey is a paid mutator transaction binding the contract method 0xa91d58b4.
//
// Solidity: function setPublicKey(bytes _pubKey) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) SetPublicKey(_pubKey []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetPublicKey(&_TssStakingSlashing.TransactOpts, _pubKey)
}

// SetPublicKey is a paid mutator transaction binding the contract method 0xa91d58b4.
//
// Solidity: function setPublicKey(bytes _pubKey) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) SetPublicKey(_pubKey []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetPublicKey(&_TssStakingSlashing.TransactOpts, _pubKey)
}

// SetRegulatoryAccount is a paid mutator transaction binding the contract method 0x3c86a42f.
//
// Solidity: function setRegulatoryAccount(address _account) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) SetRegulatoryAccount(opts *bind.TransactOpts, _account common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "setRegulatoryAccount", _account)
}

// SetRegulatoryAccount is a paid mutator transaction binding the contract method 0x3c86a42f.
//
// Solidity: function setRegulatoryAccount(address _account) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) SetRegulatoryAccount(_account common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetRegulatoryAccount(&_TssStakingSlashing.TransactOpts, _account)
}

// SetRegulatoryAccount is a paid mutator transaction binding the contract method 0x3c86a42f.
//
// Solidity: function setRegulatoryAccount(address _account) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) SetRegulatoryAccount(_account common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetRegulatoryAccount(&_TssStakingSlashing.TransactOpts, _account)
}

// SetSlashingParams is a paid mutator transaction binding the contract method 0x29f13431.
//
// Solidity: function setSlashingParams(uint256[2] _slashAmount) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) SetSlashingParams(opts *bind.TransactOpts, _slashAmount [2]*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "setSlashingParams", _slashAmount)
}

// SetSlashingParams is a paid mutator transaction binding the contract method 0x29f13431.
//
// Solidity: function setSlashingParams(uint256[2] _slashAmount) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) SetSlashingParams(_slashAmount [2]*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetSlashingParams(&_TssStakingSlashing.TransactOpts, _slashAmount)
}

// SetSlashingParams is a paid mutator transaction binding the contract method 0x29f13431.
//
// Solidity: function setSlashingParams(uint256[2] _slashAmount) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) SetSlashingParams(_slashAmount [2]*big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetSlashingParams(&_TssStakingSlashing.TransactOpts, _slashAmount)
}

// SetTokenAddress is a paid mutator transaction binding the contract method 0x26a4e8d2.
//
// Solidity: function setTokenAddress(address _token) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) SetTokenAddress(opts *bind.TransactOpts, _token common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "setTokenAddress", _token)
}

// SetTokenAddress is a paid mutator transaction binding the contract method 0x26a4e8d2.
//
// Solidity: function setTokenAddress(address _token) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) SetTokenAddress(_token common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetTokenAddress(&_TssStakingSlashing.TransactOpts, _token)
}

// SetTokenAddress is a paid mutator transaction binding the contract method 0x26a4e8d2.
//
// Solidity: function setTokenAddress(address _token) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) SetTokenAddress(_token common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetTokenAddress(&_TssStakingSlashing.TransactOpts, _token)
}

// SetTssGroupAddress is a paid mutator transaction binding the contract method 0x60ac5166.
//
// Solidity: function setTssGroupAddress(address _tssGroup) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) SetTssGroupAddress(opts *bind.TransactOpts, _tssGroup common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "setTssGroupAddress", _tssGroup)
}

// SetTssGroupAddress is a paid mutator transaction binding the contract method 0x60ac5166.
//
// Solidity: function setTssGroupAddress(address _tssGroup) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) SetTssGroupAddress(_tssGroup common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetTssGroupAddress(&_TssStakingSlashing.TransactOpts, _tssGroup)
}

// SetTssGroupAddress is a paid mutator transaction binding the contract method 0x60ac5166.
//
// Solidity: function setTssGroupAddress(address _tssGroup) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) SetTssGroupAddress(_tssGroup common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.SetTssGroupAddress(&_TssStakingSlashing.TransactOpts, _tssGroup)
}

// Slashing is a paid mutator transaction binding the contract method 0x5887c33c.
//
// Solidity: function slashing(bytes _messageBytes, bytes _sig) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) Slashing(opts *bind.TransactOpts, _messageBytes []byte, _sig []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "slashing", _messageBytes, _sig)
}

// Slashing is a paid mutator transaction binding the contract method 0x5887c33c.
//
// Solidity: function slashing(bytes _messageBytes, bytes _sig) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) Slashing(_messageBytes []byte, _sig []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Slashing(&_TssStakingSlashing.TransactOpts, _messageBytes, _sig)
}

// Slashing is a paid mutator transaction binding the contract method 0x5887c33c.
//
// Solidity: function slashing(bytes _messageBytes, bytes _sig) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) Slashing(_messageBytes []byte, _sig []byte) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Slashing(&_TssStakingSlashing.TransactOpts, _messageBytes, _sig)
}

// StartWithdraw is a paid mutator transaction binding the contract method 0x90ed6bf4.
//
// Solidity: function startWithdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) StartWithdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "startWithdraw")
}

// StartWithdraw is a paid mutator transaction binding the contract method 0x90ed6bf4.
//
// Solidity: function startWithdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) StartWithdraw() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.StartWithdraw(&_TssStakingSlashing.TransactOpts)
}

// StartWithdraw is a paid mutator transaction binding the contract method 0x90ed6bf4.
//
// Solidity: function startWithdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) StartWithdraw() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.StartWithdraw(&_TssStakingSlashing.TransactOpts)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) TransferOwnership(opts *bind.TransactOpts, newOwner common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "transferOwnership", newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.TransferOwnership(&_TssStakingSlashing.TransactOpts, newOwner)
}

// TransferOwnership is a paid mutator transaction binding the contract method 0xf2fde38b.
//
// Solidity: function transferOwnership(address newOwner) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) TransferOwnership(newOwner common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.TransferOwnership(&_TssStakingSlashing.TransactOpts, newOwner)
}

// UnJail is a paid mutator transaction binding the contract method 0x6eae5b11.
//
// Solidity: function unJail() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) UnJail(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "unJail")
}

// UnJail is a paid mutator transaction binding the contract method 0x6eae5b11.
//
// Solidity: function unJail() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) UnJail() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.UnJail(&_TssStakingSlashing.TransactOpts)
}

// UnJail is a paid mutator transaction binding the contract method 0x6eae5b11.
//
// Solidity: function unJail() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) UnJail() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.UnJail(&_TssStakingSlashing.TransactOpts)
}

// UserUnderlying is a paid mutator transaction binding the contract method 0x8f6a6240.
//
// Solidity: function userUnderlying(address user) returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingTransactor) UserUnderlying(opts *bind.TransactOpts, user common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "userUnderlying", user)
}

// UserUnderlying is a paid mutator transaction binding the contract method 0x8f6a6240.
//
// Solidity: function userUnderlying(address user) returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingSession) UserUnderlying(user common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.UserUnderlying(&_TssStakingSlashing.TransactOpts, user)
}

// UserUnderlying is a paid mutator transaction binding the contract method 0x8f6a6240.
//
// Solidity: function userUnderlying(address user) returns(uint256)
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) UserUnderlying(user common.Address) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.UserUnderlying(&_TssStakingSlashing.TransactOpts, user)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) Withdraw(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "withdraw")
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingSession) Withdraw() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Withdraw(&_TssStakingSlashing.TransactOpts)
}

// Withdraw is a paid mutator transaction binding the contract method 0x3ccfd60b.
//
// Solidity: function withdraw() returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) Withdraw() (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Withdraw(&_TssStakingSlashing.TransactOpts)
}

// Withdraw0 is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address depositor, address token, uint256 amountShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactor) Withdraw0(opts *bind.TransactOpts, depositor common.Address, token common.Address, amountShares *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.contract.Transact(opts, "withdraw0", depositor, token, amountShares)
}

// Withdraw0 is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address depositor, address token, uint256 amountShares) returns()
func (_TssStakingSlashing *TssStakingSlashingSession) Withdraw0(depositor common.Address, token common.Address, amountShares *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Withdraw0(&_TssStakingSlashing.TransactOpts, depositor, token, amountShares)
}

// Withdraw0 is a paid mutator transaction binding the contract method 0xd9caed12.
//
// Solidity: function withdraw(address depositor, address token, uint256 amountShares) returns()
func (_TssStakingSlashing *TssStakingSlashingTransactorSession) Withdraw0(depositor common.Address, token common.Address, amountShares *big.Int) (*types.Transaction, error) {
	return _TssStakingSlashing.Contract.Withdraw0(&_TssStakingSlashing.TransactOpts, depositor, token, amountShares)
}

// TssStakingSlashingDepositIterator is returned from FilterDeposit and is used to iterate over the raw logs and unpacked data for Deposit events raised by the TssStakingSlashing contract.
type TssStakingSlashingDepositIterator struct {
	Event *TssStakingSlashingDeposit // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingDepositIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingDeposit)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingDeposit)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingDepositIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingDepositIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingDeposit represents a Deposit event raised by the TssStakingSlashing contract.
type TssStakingSlashingDeposit struct {
	Depositor common.Address
	Token     common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterDeposit is a free log retrieval operation binding the contract event 0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62.
//
// Solidity: event Deposit(address depositor, address token, uint256 amount)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterDeposit(opts *bind.FilterOpts) (*TssStakingSlashingDepositIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingDepositIterator{contract: _TssStakingSlashing.contract, event: "Deposit", logs: logs, sub: sub}, nil
}

// WatchDeposit is a free log subscription operation binding the contract event 0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62.
//
// Solidity: event Deposit(address depositor, address token, uint256 amount)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchDeposit(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingDeposit) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "Deposit")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingDeposit)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "Deposit", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseDeposit is a log parse operation binding the contract event 0x5548c837ab068cf56a2c2479df0882a4922fd203edb7517321831d95078c5f62.
//
// Solidity: event Deposit(address depositor, address token, uint256 amount)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseDeposit(log types.Log) (*TssStakingSlashingDeposit, error) {
	event := new(TssStakingSlashingDeposit)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "Deposit", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingInitializedIterator is returned from FilterInitialized and is used to iterate over the raw logs and unpacked data for Initialized events raised by the TssStakingSlashing contract.
type TssStakingSlashingInitializedIterator struct {
	Event *TssStakingSlashingInitialized // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingInitializedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingInitialized)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingInitialized)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingInitializedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingInitializedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingInitialized represents a Initialized event raised by the TssStakingSlashing contract.
type TssStakingSlashingInitialized struct {
	Version uint8
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterInitialized is a free log retrieval operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterInitialized(opts *bind.FilterOpts) (*TssStakingSlashingInitializedIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingInitializedIterator{contract: _TssStakingSlashing.contract, event: "Initialized", logs: logs, sub: sub}, nil
}

// WatchInitialized is a free log subscription operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchInitialized(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingInitialized) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "Initialized")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingInitialized)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "Initialized", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseInitialized is a log parse operation binding the contract event 0x7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb3847402498.
//
// Solidity: event Initialized(uint8 version)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseInitialized(log types.Log) (*TssStakingSlashingInitialized, error) {
	event := new(TssStakingSlashingInitialized)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "Initialized", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingOwnershipTransferredIterator is returned from FilterOwnershipTransferred and is used to iterate over the raw logs and unpacked data for OwnershipTransferred events raised by the TssStakingSlashing contract.
type TssStakingSlashingOwnershipTransferredIterator struct {
	Event *TssStakingSlashingOwnershipTransferred // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingOwnershipTransferredIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingOwnershipTransferred)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingOwnershipTransferred)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingOwnershipTransferredIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingOwnershipTransferredIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingOwnershipTransferred represents a OwnershipTransferred event raised by the TssStakingSlashing contract.
type TssStakingSlashingOwnershipTransferred struct {
	PreviousOwner common.Address
	NewOwner      common.Address
	Raw           types.Log // Blockchain specific contextual infos
}

// FilterOwnershipTransferred is a free log retrieval operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterOwnershipTransferred(opts *bind.FilterOpts, previousOwner []common.Address, newOwner []common.Address) (*TssStakingSlashingOwnershipTransferredIterator, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingOwnershipTransferredIterator{contract: _TssStakingSlashing.contract, event: "OwnershipTransferred", logs: logs, sub: sub}, nil
}

// WatchOwnershipTransferred is a free log subscription operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchOwnershipTransferred(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingOwnershipTransferred, previousOwner []common.Address, newOwner []common.Address) (event.Subscription, error) {

	var previousOwnerRule []interface{}
	for _, previousOwnerItem := range previousOwner {
		previousOwnerRule = append(previousOwnerRule, previousOwnerItem)
	}
	var newOwnerRule []interface{}
	for _, newOwnerItem := range newOwner {
		newOwnerRule = append(newOwnerRule, newOwnerItem)
	}

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "OwnershipTransferred", previousOwnerRule, newOwnerRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingOwnershipTransferred)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseOwnershipTransferred is a log parse operation binding the contract event 0x8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0.
//
// Solidity: event OwnershipTransferred(address indexed previousOwner, address indexed newOwner)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseOwnershipTransferred(log types.Log) (*TssStakingSlashingOwnershipTransferred, error) {
	event := new(TssStakingSlashingOwnershipTransferred)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "OwnershipTransferred", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingPausedIterator is returned from FilterPaused and is used to iterate over the raw logs and unpacked data for Paused events raised by the TssStakingSlashing contract.
type TssStakingSlashingPausedIterator struct {
	Event *TssStakingSlashingPaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingPausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingPaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingPaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingPausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingPausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingPaused represents a Paused event raised by the TssStakingSlashing contract.
type TssStakingSlashingPaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterPaused is a free log retrieval operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterPaused(opts *bind.FilterOpts) (*TssStakingSlashingPausedIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingPausedIterator{contract: _TssStakingSlashing.contract, event: "Paused", logs: logs, sub: sub}, nil
}

// WatchPaused is a free log subscription operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchPaused(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingPaused) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "Paused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingPaused)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "Paused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParsePaused is a log parse operation binding the contract event 0x62e78cea01bee320cd4e420270b5ea74000d11b0c9f74754ebdbfc544b05a258.
//
// Solidity: event Paused(address account)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParsePaused(log types.Log) (*TssStakingSlashingPaused, error) {
	event := new(TssStakingSlashingPaused)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "Paused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingSlashingIterator is returned from FilterSlashing and is used to iterate over the raw logs and unpacked data for Slashing events raised by the TssStakingSlashing contract.
type TssStakingSlashingSlashingIterator struct {
	Event *TssStakingSlashingSlashing // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingSlashingIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingSlashing)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingSlashing)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingSlashingIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingSlashingIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingSlashing represents a Slashing event raised by the TssStakingSlashing contract.
type TssStakingSlashingSlashing struct {
	Arg0 common.Address
	Arg1 uint8
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterSlashing is a free log retrieval operation binding the contract event 0x9453459a6e9fa2069f1490c99cec15646afa157300f218a7f7840b23d09dbd3e.
//
// Solidity: event Slashing(address arg0, uint8 arg1)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterSlashing(opts *bind.FilterOpts) (*TssStakingSlashingSlashingIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "Slashing")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingSlashingIterator{contract: _TssStakingSlashing.contract, event: "Slashing", logs: logs, sub: sub}, nil
}

// WatchSlashing is a free log subscription operation binding the contract event 0x9453459a6e9fa2069f1490c99cec15646afa157300f218a7f7840b23d09dbd3e.
//
// Solidity: event Slashing(address arg0, uint8 arg1)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchSlashing(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingSlashing) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "Slashing")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingSlashing)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "Slashing", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseSlashing is a log parse operation binding the contract event 0x9453459a6e9fa2069f1490c99cec15646afa157300f218a7f7840b23d09dbd3e.
//
// Solidity: event Slashing(address arg0, uint8 arg1)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseSlashing(log types.Log) (*TssStakingSlashingSlashing, error) {
	event := new(TssStakingSlashingSlashing)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "Slashing", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingUnpausedIterator is returned from FilterUnpaused and is used to iterate over the raw logs and unpacked data for Unpaused events raised by the TssStakingSlashing contract.
type TssStakingSlashingUnpausedIterator struct {
	Event *TssStakingSlashingUnpaused // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingUnpausedIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingUnpaused)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingUnpaused)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingUnpausedIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingUnpausedIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingUnpaused represents a Unpaused event raised by the TssStakingSlashing contract.
type TssStakingSlashingUnpaused struct {
	Account common.Address
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterUnpaused is a free log retrieval operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterUnpaused(opts *bind.FilterOpts) (*TssStakingSlashingUnpausedIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingUnpausedIterator{contract: _TssStakingSlashing.contract, event: "Unpaused", logs: logs, sub: sub}, nil
}

// WatchUnpaused is a free log subscription operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchUnpaused(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingUnpaused) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "Unpaused")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingUnpaused)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "Unpaused", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseUnpaused is a log parse operation binding the contract event 0x5db9ee0a495bf2e6ff9c91a7834c1ba4fdd244a5e8aa4e537bd38aeae4b073aa.
//
// Solidity: event Unpaused(address account)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseUnpaused(log types.Log) (*TssStakingSlashingUnpaused, error) {
	event := new(TssStakingSlashingUnpaused)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "Unpaused", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingWithdrawIterator is returned from FilterWithdraw and is used to iterate over the raw logs and unpacked data for Withdraw events raised by the TssStakingSlashing contract.
type TssStakingSlashingWithdrawIterator struct {
	Event *TssStakingSlashingWithdraw // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingWithdrawIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingWithdraw)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingWithdraw)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingWithdrawIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingWithdrawIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingWithdraw represents a Withdraw event raised by the TssStakingSlashing contract.
type TssStakingSlashingWithdraw struct {
	Depositor common.Address
	Token     common.Address
	Amount    *big.Int
	Raw       types.Log // Blockchain specific contextual infos
}

// FilterWithdraw is a free log retrieval operation binding the contract event 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb.
//
// Solidity: event Withdraw(address depositor, address token, uint256 amount)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterWithdraw(opts *bind.FilterOpts) (*TssStakingSlashingWithdrawIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "Withdraw")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingWithdrawIterator{contract: _TssStakingSlashing.contract, event: "Withdraw", logs: logs, sub: sub}, nil
}

// WatchWithdraw is a free log subscription operation binding the contract event 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb.
//
// Solidity: event Withdraw(address depositor, address token, uint256 amount)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchWithdraw(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingWithdraw) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "Withdraw")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingWithdraw)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "Withdraw", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdraw is a log parse operation binding the contract event 0x9b1bfa7fa9ee420a16e124f794c35ac9f90472acc99140eb2f6447c714cad8eb.
//
// Solidity: event Withdraw(address depositor, address token, uint256 amount)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseWithdraw(log types.Log) (*TssStakingSlashingWithdraw, error) {
	event := new(TssStakingSlashingWithdraw)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "Withdraw", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// TssStakingSlashingWithdrawQueueIterator is returned from FilterWithdrawQueue and is used to iterate over the raw logs and unpacked data for WithdrawQueue events raised by the TssStakingSlashing contract.
type TssStakingSlashingWithdrawQueueIterator struct {
	Event *TssStakingSlashingWithdrawQueue // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *TssStakingSlashingWithdrawQueueIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(TssStakingSlashingWithdrawQueue)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(TssStakingSlashingWithdrawQueue)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *TssStakingSlashingWithdrawQueueIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *TssStakingSlashingWithdrawQueueIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// TssStakingSlashingWithdrawQueue represents a WithdrawQueue event raised by the TssStakingSlashing contract.
type TssStakingSlashingWithdrawQueue struct {
	Arg0 common.Address
	Arg1 *big.Int
	Raw  types.Log // Blockchain specific contextual infos
}

// FilterWithdrawQueue is a free log retrieval operation binding the contract event 0x784199bc7528da846b1da87aeba29604de8f22a93e73379d5d1c7282fa3c727f.
//
// Solidity: event WithdrawQueue(address arg0, uint256 arg1)
func (_TssStakingSlashing *TssStakingSlashingFilterer) FilterWithdrawQueue(opts *bind.FilterOpts) (*TssStakingSlashingWithdrawQueueIterator, error) {

	logs, sub, err := _TssStakingSlashing.contract.FilterLogs(opts, "WithdrawQueue")
	if err != nil {
		return nil, err
	}
	return &TssStakingSlashingWithdrawQueueIterator{contract: _TssStakingSlashing.contract, event: "WithdrawQueue", logs: logs, sub: sub}, nil
}

// WatchWithdrawQueue is a free log subscription operation binding the contract event 0x784199bc7528da846b1da87aeba29604de8f22a93e73379d5d1c7282fa3c727f.
//
// Solidity: event WithdrawQueue(address arg0, uint256 arg1)
func (_TssStakingSlashing *TssStakingSlashingFilterer) WatchWithdrawQueue(opts *bind.WatchOpts, sink chan<- *TssStakingSlashingWithdrawQueue) (event.Subscription, error) {

	logs, sub, err := _TssStakingSlashing.contract.WatchLogs(opts, "WithdrawQueue")
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(TssStakingSlashingWithdrawQueue)
				if err := _TssStakingSlashing.contract.UnpackLog(event, "WithdrawQueue", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseWithdrawQueue is a log parse operation binding the contract event 0x784199bc7528da846b1da87aeba29604de8f22a93e73379d5d1c7282fa3c727f.
//
// Solidity: event WithdrawQueue(address arg0, uint256 arg1)
func (_TssStakingSlashing *TssStakingSlashingFilterer) ParseWithdrawQueue(log types.Log) (*TssStakingSlashingWithdrawQueue, error) {
	event := new(TssStakingSlashingWithdrawQueue)
	if err := _TssStakingSlashing.contract.UnpackLog(event, "WithdrawQueue", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
